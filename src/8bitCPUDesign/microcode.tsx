
export class microCodeData {

    static getData(): number[] {

        let RAMIN = 0b10000000000000000000000000000000
        let RAMOUT = 0b01000000000000000000000000000000
        let INSTRIN = 0b00100000000000000000000000000000
        let INSTROUT = 0b00010000000000000000000000000000
        let COUNTEROUT = 0b00001000000000000000000000000000
        //THERE IS AN EMPTY BIT HERE // UNUSED!!
        let COUNTERENABLE = 0b00000010000000000000000000000000
        let AIN = 0b00000001000000000000000000000000
        let AOUT = 0b00000000100000000000000000000000
        let SUMOUT = 0b00000000010000000000000000000000
        let ALU1 = 0b00000000001000000000000000000000
        let ALU2 = 0b00000000000100000000000000000000
        let ALU3 = 0b00000000000010000000000000000000
        let ALU4 = 0b00000000000001000000000000000000
        let B_IN = 0b00000000000000100000000000000000
        let BOUT = 0b00000000000000010000000000000000
        let OUTIN = 0b00000000000000001000000000000000
        let HALT = 0b00000000000000000100000000000000
        let MEMORYREGIN = 0b00000000000000000010000000000000
        let JUMPALESSB = 0b00000000000000000001000000000000
        let JUMPAEQUALB = 0b00000000000000000000100000000000
        let JUMPAGREATERB = 0b00000000000000000000010000000000
        let FLAGIN = 0b00000000000000000000001000000000
        let COM_STATUS_OUT = 0b00000000000000000000000100000000
        let COM_CONTROL_IN = 0b00000000000000000000000010000000
        let COM_DATA_OUT = 0b00000000000000000000000001000000

        let ADD = ALU1 | ALU4
        let SUBTRACT = ALU2 | ALU3

        //TODO these are not updated to the instructions in speadsheet yet.
        let microCodeData: number[] = [
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, 0, 0, 0, 0, 0, 0,                                                                                             //0000 NOP
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, RAMOUT | MEMORYREGIN, RAMOUT | AIN | COUNTERENABLE, 0, 0, 0,                        //0001 LOADA
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, AOUT | OUTIN, 0, 0, 0, 0, 0,                                                                                  //0010 OUT
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, RAMOUT | MEMORYREGIN, RAMOUT | B_IN | COUNTERENABLE, SUMOUT | AIN | ADD, 0, 0,      //0011 ADD
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, RAMOUT | MEMORYREGIN, RAMOUT | B_IN | COUNTERENABLE, SUMOUT | AIN | SUBTRACT, 0, 0, //0100 SUBTRACT
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, RAMOUT | MEMORYREGIN, RAMIN | AOUT | COUNTERENABLE, 0, 0, 0,                        //0101 STOREA (THERE WAS AN EXTRA 0 HERE WHICH MEANS IT IS IN THE EEPROMS ON MY DESK)
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, RAMOUT | AIN | COUNTERENABLE, 0, 0, 0, 0,                                           //0110 LOADAIMMEDIATE
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, RAMOUT | JUMPAEQUALB | JUMPALESSB | JUMPAGREATERB, 0, 0, 0, 0,                      //0111 JUMP
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, COUNTERENABLE, RAMOUT | JUMPAEQUALB, 0, 0, 0,                                       //1000 JUMPIFEQUAL
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, COUNTERENABLE, RAMOUT | JUMPALESSB, 0, 0, 0,                                        //1001 JUMPIFLESS
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, COUNTERENABLE, RAMOUT | JUMPAGREATERB, 0, 0, 0,                                     //1010 JUMPIFGREATER
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, RAMOUT | MEMORYREGIN, RAMOUT | B_IN | COUNTERENABLE, 0, 0, 0,                       //1011 LOADB
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, RAMOUT | B_IN | COUNTERENABLE, 0, 0, 0, 0,                                          //1100 LOADBIMMEDIATE
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, RAMOUT | MEMORYREGIN, RAMIN | BOUT | COUNTERENABLE, 0, 0, 0,                        //1101 STOREB (THERE WAS AN EXTRA 0 HERE WHICH MEANS IT IS IN THE EEPROMS ON MY DESK)
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, FLAGIN, 0, 0, 0, 0, 0,                                                                                        //1110 UPDATE FLAGS
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, HALT, 0, 0, 0, 0, 0,                                                                                          //1111 HALT

            //COM test instructions for loading bootloader from external memory.
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, RAMOUT | COM_CONTROL_IN | COUNTERENABLE, 0, 0, 0, 0,                                //0001x1111 LOADCONTROLIMMEDIATE
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, RAMOUT | MEMORYREGIN, RAMIN | COM_STATUS_OUT | COUNTERENABLE, 0, 0, 0,              //0010x1111 STORE COM STATUS
            MEMORYREGIN | COUNTEROUT, RAMOUT | INSTRIN | COUNTERENABLE, MEMORYREGIN | COUNTEROUT, RAMOUT | MEMORYREGIN, RAMIN | COM_DATA_OUT | COUNTERENABLE, 0, 0, 0,                //0011x1111 STORE COM DATA


        ];

        return microCodeData;
    }
}