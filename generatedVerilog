
         (* DONT_TOUCH = "yes" *)
            module nRegister(data,clock,enable,Q);
        parameter n = 8;
        input [0:n-1] data;
        input clock,enable;
        output reg [0:n-1] Q = {n-1{1'b0}};

        always@(posedge clock)
            if(enable)
                Q<=data;
            endmodule
        
 (* DONT_TOUCH = "yes" *)
            module voltageRail(data,Q);
        input wire data;
        output reg Q;
        always@(data)
        Q <= data;
        endmodule
        
 (* DONT_TOUCH = "yes" *)
            module nBuffer(data,Q,outputEnable);
        parameter n=8;
        input [0:n-1] data;
        input outputEnable;
        output reg [0:n-1] Q;
    
        always@(outputEnable,data)
        if(outputEnable)
            Q <= data;
        else
            Q <= {n{1'b0}};
    endmodule
 (* DONT_TOUCH = "yes" *)
            module inverter(data,Q,outputEnable);
    input data,outputEnable;
    output reg Q;
    always@(data,outputEnable)
        if(outputEnable)
            Q <= ~data;
        else
            Q<=1'b0;
    endmodule
    
 (* DONT_TOUCH = "yes" *)
            module ANDGATE(a,b,c);
        input a,b;
        output c;
        and a1 (c,a,b);
        endmodule
module ORGATE(a,b,c);
    input a,b;
    output c;
    or a1 (c,a,b);
        endmodule
 (* DONT_TOUCH = "yes" *)
            module bus_mux ( selects, data_in, data_out ); 
        parameter bus_count = 16;                   // number of input buses 
        parameter mux_width = 8;                    // bit width of data buses 
        input  [0:bus_count-1]           selects;   // one-hot select signals 
        input  [0:mux_width*bus_count-1] data_in;   // concatenated input buses 
        output reg [0:mux_width-1]                 data_out;  // output data bus 
        
        integer i=0;
        integer j=0;
        always@(selects,data_in)
        begin
        data_out = 'b0; 
    
                for (i = 0; i < bus_count; i = i + 1) 
                        for (j = 0; j < mux_width; j = j + 1) 
                                data_out[j] = data_out[j] | data_in[mux_width*i +j] &selects[i]; 
        end  // always 
        endmodule
        
 (* DONT_TOUCH = "yes" *)
        module nbitAdder(sub,cin,x,y,sum,cout);
        parameter n = 8;
        input sub,cin;
        input [0:n-1] x,y;
        output [0:n-1]sum;
        output cout;
        wire[0:n-1] onesComplement;

        assign onesComplement = {n{sub}}^y +sub;
        assign {cout,sum} = {1'b0,x} + {1'b0,onesComplement} + cin;
        endmodule
        
 (* DONT_TOUCH = "yes" *)
            module binaryCounter(D,clr_,load_,clock,enable1_,enable2_,Q);
        parameter n = 8;
        input [0:n-1] D;
        input clr_,clock,enable1_,enable2_,load_;
        output reg [0:n-1] Q = {n-1{1'b0}};

        always@(posedge clock)
        if(!clr_)
        Q <= 0;
        else if (!load_)
        Q <= D;
        else if ((!enable1_) && (!enable2_))
        Q <= Q + 1;
        endmodule
        
 (* DONT_TOUCH = "yes" *)
            module nbitComparator (
            input wire [0:n-1] a,
            input wire [0:n-1] b,
            output wire equal,
            output wire lower
          );
          parameter n = 8;
          assign equal = (a===b);
          assign lower = (a<b)?1'b1:1'b0;
          endmodule
          
 (* DONT_TOUCH = "yes" *)
            module twoLineToFourLineDecoder (a,b,en_,y0,y1,y2,y3);
          input a, b, en_;
          output y0,y1,y2,y3;
          assign y0= (~a) & (~b) & (~en_);
          assign y1= (~a) & b & (~en_);
          assign y2= a & (~ b) & (~en_);
          assign y3= a & b & (~en_);
          endmodule
          

        (* DONT_TOUCH = "yes" *)
        //-----------------------------------------------------
        module staticRamDiscretePorts (
            address     , // Address Input
            data        , // Data input
            cs_,
            we_,
            oe_,
            clock,
            Q               //output
            );
            parameter ROMFILE = "noFile";
            parameter DATA_WIDTH = 8 ;
            parameter ADDR_WIDTH = 8 ;
            parameter RAM_DEPTH = 1 << ADDR_WIDTH;
            
        
            //--------------Input Ports----------------------- 
            input [0:ADDR_WIDTH-1] address ;
            input [0:DATA_WIDTH-1]  data;
            input cs_;
            input we_;
            input oe_;
            input clock;
        
            //--------------Output Ports----------------------- 
            output reg [0:DATA_WIDTH-1] Q;
            integer i;
            //--------------Internal variables----------------
            reg [0:DATA_WIDTH-1] mem [0:RAM_DEPTH-1];
            
            //--------------Code Starts Here------------------ 
            initial begin
             $readmemb(ROMFILE, mem);
              for (i = 0; i < RAM_DEPTH; i = i + 1) begin
              #1 $display("%d",mem[i]);
              end
            end
            
            always @(posedge clock)
            begin
              if (!cs_ && !we_)
                mem[address] = data;
               Q = (!cs_ && !oe_) ? mem[address] : {DATA_WIDTH{1'bz}};
            end
            
            endmodule
    
(* DONT_TOUCH = "yes" *)
    //-----------------------------------------------------
    module dualPortStaticRam (
        address_1     , // Address Input
        address_2     , // Address Input
        data        , // Data input
        cs_,
        we_,
        oe_,
        clock,
        clock2,
        Q_1,               //output
        Q_2               //output
        );
        parameter ROMFILE = "noFile";
        parameter DATA_WIDTH = 8 ;
        parameter ADDR_WIDTH = 8 ;
        parameter RAM_DEPTH = 1 << ADDR_WIDTH;
        
    
        //--------------Input Ports----------------------- 
        input [0:ADDR_WIDTH-1] address_1 ;
        input [0:ADDR_WIDTH-1] address_2 ;
        input [0:DATA_WIDTH-1]  data;
        input cs_;
        input we_;
        input oe_;
        input clock;
        input clock2;
    
        //--------------Output Ports----------------------- 
        output reg [0:DATA_WIDTH-1] Q_1;
        output reg [0:DATA_WIDTH-1] Q_2;
        integer i;
        //--------------Internal variables----------------
        reg [0:DATA_WIDTH-1] mem [0:RAM_DEPTH-1];
        
        //--------------Code Starts Here------------------ 
        initial begin
         $readmemb(ROMFILE, mem);
          for (i = 0; i < RAM_DEPTH; i = i + 1) begin
          #1 $display("%d",mem[i]);
          end
        end
        
        always @(posedge clock)
        begin
          if (!cs_ && !we_)
            mem[address_1] = data;
           Q_1 = (!cs_ && !oe_) ? mem[address_1] : {DATA_WIDTH{1'bz}};
           //Q_2 = mem[address_2];
        end

        always@(posedge clock2) begin
            Q_2 = mem[address_2];
        end
        
        endmodule
    
    
(* DONT_TOUCH = "yes" *)
    module vgaSignalGenerator(
        input wire i_clk,           // base clock
        input wire i_pix_stb,       // pixel clock strobe
        output wire o_hs,           // horizontal sync
        output wire o_vs,           // vertical sync
        output wire o_blanking,     // high during blanking interval
        output wire o_active,       // high during active pixel drawing
        output wire o_screenend,    // high for one tick at the end of screen
        output wire o_animate,      // high for one tick at end of active drawing
        output wire [9:0] o_x,      // current pixel x position
        output wire [8:0] o_y       // current pixel y position
        );
    
        // VGA timings https://timetoexplore.net/blog/video-timings-vga-720p-1080p
        localparam HS_STA = 16;              // horizontal sync start
        localparam HS_END = 16 + 96;         // horizontal sync end
        localparam HA_STA = 16 + 96 + 48;    // horizontal active pixel start
        localparam VS_STA = 480 + 11;        // vertical sync start
        localparam VS_END = 480 + 11 + 2;    // vertical sync end
        localparam VA_END = 480;             // vertical active pixel end
        localparam LINE   = 800;             // complete line (pixels)
        localparam SCREEN = 524;             // complete screen (lines)
    
        reg [9:0] h_count = 0;  // line position
        reg [9:0] v_count = 0;  // screen position
    
        // generate sync signals (active low for 640x480)
        assign o_hs = ~((h_count >= HS_STA) & (h_count < HS_END));
        assign o_vs = ~((v_count >= VS_STA) & (v_count < VS_END));
    
        // keep x and y bound within the active pixels
        assign o_x = (h_count < HA_STA) ? 0 : (h_count - HA_STA);
        assign o_y = (v_count >= VA_END) ? (VA_END - 1) : (v_count);
    
        // blanking: high within the blanking period
        assign o_blanking = ((h_count < HA_STA) | (v_count > VA_END - 1));
    
        // active: high during active pixel drawing
        assign o_active = ~((h_count < HA_STA) | (v_count > VA_END - 1)); 
    
        // screenend: high for one tick at the end of the screen
        assign o_screenend = ((v_count == SCREEN - 1) & (h_count == LINE));
    
        // animate: high for one tick at the end of the final active pixel line
        assign o_animate = ((v_count == VA_END - 1) & (h_count == LINE));
    
        always @ (posedge i_clk)
        begin
            if (i_pix_stb)  // once per pixel
            begin
                if (h_count == LINE)  // end of line
                begin
                    h_count <= 0;
                    v_count <= v_count + 1;
                end
                else 
                    h_count <= h_count + 1;
    
                if (v_count == SCREEN)  // end of screen
                    begin
                    v_count <= 0;
                    end
            end
        end
    endmodule

    
 
            module SPIComPart(
                input wire i_clk,                   // base clock
                input wire [0:n-1] i_controlReg,    // control reg
                input wire  i_serial,               // serialIn
        
                output reg [0:n-1] o_dataReg = 0,       //databits to write to
                output reg [0:n-1] o_statReg = 0,       //status reg to write to
        
                output reg o_enable = 1,                 // start comms on slave
                output reg o_clock = 0           // clock out for clock
                );
        
                parameter n=16;
        
                //for now lets just count to 16.
                reg [0:7]internalcounter = 0;
                reg  startcoms = 0;
                reg  startcomsRisingEdge = 0;
                reg hold = 0;
               
                //when the clock goes high and start is high
                //then generate n clock pulses.
                //then drive start low.
                //and shift in data after each pulse.
                
                always @(posedge i_clk)
                begin
                
                 startcomsRisingEdge = i_controlReg[15] & !startcoms;              
                 startcoms = i_controlReg[15];
               
                if((startcomsRisingEdge))begin
                   hold = 1;
                   o_statReg[15] = 0;
                end
               
                        if(internalcounter > 31)
                        begin
                            internalcounter = 0;
                            hold = 0;
                            o_enable = 1;
                            o_statReg[15] = 1;
                            o_clock = 0;
                        end
                        
                          
                          
                        //if we have not yet reset the start flag
                        //then count on the clock
                        if(hold == 1)begin
                            internalcounter = internalcounter + 1;
                             o_enable = 0;
                             o_clock = internalcounter[7];
                            //shift in data from the serial port
                            o_dataReg <= {o_dataReg[1:n-1] ,i_serial};
        
                        end
                       
                
                end
        
                endmodule
    
        (* DONT_TOUCH = "yes" *)
        module top(input CLK,
        
            output reg [0:3] LED,
            output wire VGA_HS_O,       // horizontal sync output
            output wire VGA_VS_O,       // vertical sync output
            output wire [3:0] VGA_R,    // 4-bit VGA red output
            output wire [3:0] VGA_G,    // 4-bit VGA green output
            output wire [3:0] VGA_B);     // 4-bit VGA blue output);
               
            reg HIGH = 1;
            reg LOW = 0;
            reg SUBMODE = 0;
            reg UNCONNECTED = 0;

            reg [0:0]clock;
            reg [0:0]ClockFaster;
            reg pix_stb;

        
        
        wire [0:1-1] COMenableOn83d9b911_01ca_498e_bf35_a12a0bc8d8fc;
wire [0:1-1] invertONe76738cd_1688_4337_82e0_572c04e1653a;
wire [0:1-1] signalBankOutputOnc6b73168_d681_4c8f_9f32_8847a722cb64;
wire [0:1-1] invertOn642c198a_67d4_4016_8e09_267f06eca4b0;
wire [0:1-1] eepromChipEnable3dacf7a7_7710_4c5b_a7c6_54ea4e2140bf;
wire [0:1-1] eepromOutEnablef23e570a_5744_47b9_a3b4_6d2d272fe79e;
wire [0:1-1] eepromWriteDisabled8754c998_eb95_4b78_8176_ceac2ba4932a;
wire [0:1-1] load_disabled22823285_6d90_4668_a504_81f5f67bdda3;
wire [0:1-1] count_enable_microcode_counter546e169e_abff_418a_ad0f_1d848446abde;
wire [0:1-1] invert_clock_signal_enable2bb92058_c538_4490_9e1b_3a454c9a349d;
wire [0:1-1] clearPCc4e845ab_e0f6_4665_aad6_d6af8f0371ec;
wire [0:1-1] ram_chipEnablee80517cb_5a91_4627_a96e_bc2d39ac54e8;



wire [0:16-1] comDataReg746c76e9_dda0_4435_ae33_ebd756abc438;
wire [0:16-1] allInputsFord1e264de_451f_4c93_8fad_80433e9cd974= {spi_test4723fc92_1146_4f81_9d86_279839648f34[0],spi_test4723fc92_1146_4f81_9d86_279839648f34[1],spi_test4723fc92_1146_4f81_9d86_279839648f34[2],spi_test4723fc92_1146_4f81_9d86_279839648f34[3],spi_test4723fc92_1146_4f81_9d86_279839648f34[4],spi_test4723fc92_1146_4f81_9d86_279839648f34[5],spi_test4723fc92_1146_4f81_9d86_279839648f34[6],spi_test4723fc92_1146_4f81_9d86_279839648f34[7],spi_test4723fc92_1146_4f81_9d86_279839648f34[8],spi_test4723fc92_1146_4f81_9d86_279839648f34[9],spi_test4723fc92_1146_4f81_9d86_279839648f34[10],spi_test4723fc92_1146_4f81_9d86_279839648f34[11],spi_test4723fc92_1146_4f81_9d86_279839648f34[12],spi_test4723fc92_1146_4f81_9d86_279839648f34[13],spi_test4723fc92_1146_4f81_9d86_279839648f34[14],spi_test4723fc92_1146_4f81_9d86_279839648f34[15]};
wire [0:16-1] comStatusReg113e047a_ffe7_4336_9075_948117f266b4;
wire [0:16-1] allInputsFor7e71762f_dd23_485e_8d4b_3c437f5bdc8f= {spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[0],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[1],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[2],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[3],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[4],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[5],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[6],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[7],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[8],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[9],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[10],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[11],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[12],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[13],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[14],spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6[15]};

wire [0:1-1] invert_clock_signalf3dffce2_f851_4666_8dd2_d273524fd36e;
wire [0:3-1] microcode_step_counter96e7bcf8_2694_4d1e_966d_f287e2d967f2;
wire [0:1-1] decodeInverter89027d47_cdff_419e_b7f6_ac0f86d26ab4;

wire decoder253131089_5adf_4a37_9c87_5eb622c98482;
wire decoder28be7dc97_11ed_4b75_9f6a_ff82f74fedef;
wire decoder25acf8ade_5d36_43cc_bfca_66f0bc0589e7;
wire decoder26a0670af_a516_4af9_a2ad_419a268414c5;
wire decoder16b6d2945_c76d_4f2e_af7c_f7d038b8774c;
wire decoder1f5362485_b650_4a5d_b813_60ccd869e377;
wire decoder1415a997c_8e24_4adc_b46c_de8326b6138d;
wire decoder1e0ce0bc8_81d9_4c7b_93b6_2324ee7d091a;
wire [0:16-1] Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f;
wire [0:16-1] pc_buffer3f2bc22c_549e_4203_a36b_46721292d3f5;
wire [0:16-1] allInputsFor58054f87_678b_435a_bf3f_7d5b7e6673f2= {Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[0],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[1],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[2],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[3],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[4],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[5],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[6],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[7],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[8],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[9],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[10],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[11],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[12],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[13],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[14],Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f[15]};
wire [0:16-1] main_busc9836d79_6631_466f_aee1_3c89816d2705;
wire [0:112-1] allInputsFor1f2de791_5ca6_4a0a_9ee4_a813c859e875= {A_reg_bufferc30d247a_f405_45be_ae39_370545cf0c32,B_reg_buffer2204c583_7ca5_4d97_853a_6aae27c34ad4,adder_bufferaeef3eb0_a442_4671_badd_0c88a1aa15b1,ram_output_buffer3972ecc1_1f51_4184_b8e4_d9544807d8a1,pc_buffer3f2bc22c_549e_4203_a36b_46721292d3f5,comDataRegBufferb1f5d7c0_40bc_40a0_9014_2a76d5195b7e,comStatusRegBuffer480dab83_8f38_4c38_90d5_c2f1a69a79ae};
wire [0:7-1] allSelectsFor1f2de791_5ca6_4a0a_9ee4_a813c859e875= {microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[8],microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[15],microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[9],microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[1],microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[4],microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[25],microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[23]};
wire [0:16-1] instruction_register43ed279e_9678_4a32_bea5_e073bccd2bc6;
wire [0:16-1] allInputsFor1a62bf14_a1cb_477d_8bb0_ce107402fac4= {main_busc9836d79_6631_466f_aee1_3c89816d2705[0],main_busc9836d79_6631_466f_aee1_3c89816d2705[1],main_busc9836d79_6631_466f_aee1_3c89816d2705[2],main_busc9836d79_6631_466f_aee1_3c89816d2705[3],main_busc9836d79_6631_466f_aee1_3c89816d2705[4],main_busc9836d79_6631_466f_aee1_3c89816d2705[5],main_busc9836d79_6631_466f_aee1_3c89816d2705[6],main_busc9836d79_6631_466f_aee1_3c89816d2705[7],main_busc9836d79_6631_466f_aee1_3c89816d2705[8],main_busc9836d79_6631_466f_aee1_3c89816d2705[9],main_busc9836d79_6631_466f_aee1_3c89816d2705[10],main_busc9836d79_6631_466f_aee1_3c89816d2705[11],main_busc9836d79_6631_466f_aee1_3c89816d2705[12],main_busc9836d79_6631_466f_aee1_3c89816d2705[13],main_busc9836d79_6631_466f_aee1_3c89816d2705[14],main_busc9836d79_6631_466f_aee1_3c89816d2705[15]};
wire [0:32-1] microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179;
wire [0:8-1] allAddressInputsFor901242d9_fbd3_4d02_9d3f_dd9a8202315b= {instruction_register43ed279e_9678_4a32_bea5_e073bccd2bc6[11],instruction_register43ed279e_9678_4a32_bea5_e073bccd2bc6[12],instruction_register43ed279e_9678_4a32_bea5_e073bccd2bc6[13],instruction_register43ed279e_9678_4a32_bea5_e073bccd2bc6[14],instruction_register43ed279e_9678_4a32_bea5_e073bccd2bc6[15],microcode_step_counter96e7bcf8_2694_4d1e_966d_f287e2d967f2[0],microcode_step_counter96e7bcf8_2694_4d1e_966d_f287e2d967f2[1],microcode_step_counter96e7bcf8_2694_4d1e_966d_f287e2d967f2[2]};
wire [0:32-1] allDataInputsFor901242d9_fbd3_4d02_9d3f_dd9a8202315b= {UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED};
wire [0:32-1] microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc;
wire [0:32-1] allInputsFor1f2d9b52_8055_4dea_82a4_9a5c3d8ab7d2= {microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[0],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[1],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[2],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[3],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[4],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[5],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[6],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[7],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[8],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[9],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[10],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[11],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[12],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[13],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[14],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[15],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[16],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[17],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[18],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[19],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[20],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[21],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[22],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[23],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[24],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[25],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[26],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[27],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[28],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[29],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[30],microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179[31]};
wire [0:16-1] comDataRegBufferb1f5d7c0_40bc_40a0_9014_2a76d5195b7e;
wire [0:16-1] allInputsFor05b7ffbf_026b_41fc_9662_0042d23f59d8= {comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[0],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[1],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[2],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[3],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[4],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[5],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[6],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[7],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[8],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[9],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[10],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[11],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[12],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[13],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[14],comDataReg746c76e9_dda0_4435_ae33_ebd756abc438[15]};
wire [0:16-1] comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b;
wire [0:16-1] allInputsFor21c5e114_9b5d_4b2e_b592_e6ec52008c02= {main_busc9836d79_6631_466f_aee1_3c89816d2705[0],main_busc9836d79_6631_466f_aee1_3c89816d2705[1],main_busc9836d79_6631_466f_aee1_3c89816d2705[2],main_busc9836d79_6631_466f_aee1_3c89816d2705[3],main_busc9836d79_6631_466f_aee1_3c89816d2705[4],main_busc9836d79_6631_466f_aee1_3c89816d2705[5],main_busc9836d79_6631_466f_aee1_3c89816d2705[6],main_busc9836d79_6631_466f_aee1_3c89816d2705[7],main_busc9836d79_6631_466f_aee1_3c89816d2705[8],main_busc9836d79_6631_466f_aee1_3c89816d2705[9],main_busc9836d79_6631_466f_aee1_3c89816d2705[10],main_busc9836d79_6631_466f_aee1_3c89816d2705[11],main_busc9836d79_6631_466f_aee1_3c89816d2705[12],main_busc9836d79_6631_466f_aee1_3c89816d2705[13],main_busc9836d79_6631_466f_aee1_3c89816d2705[14],main_busc9836d79_6631_466f_aee1_3c89816d2705[15]};
wire [0:16-1] spi_test4723fc92_1146_4f81_9d86_279839648f34;
wire [0:16-1] spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6;
wire [0:16-1] AllControlInputsFor1334cb21_8389_41b7_93b5_b04a4fedbdee= {comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[0],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[1],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[2],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[3],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[4],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[5],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[6],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[7],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[8],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[9],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[10],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[11],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[12],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[13],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[14],comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b[15]};
wire [0:16-1] comStatusRegBuffer480dab83_8f38_4c38_90d5_c2f1a69a79ae;
wire [0:16-1] allInputsFor6d7be101_b416_4f3e_9b11_3747f2d4387b= {comStatusReg113e047a_ffe7_4336_9075_948117f266b4[0],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[1],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[2],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[3],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[4],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[5],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[6],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[7],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[8],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[9],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[10],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[11],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[12],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[13],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[14],comStatusReg113e047a_ffe7_4336_9075_948117f266b4[15]};
wire [0:1-1] countEnableInverter4fbd0ff4_82ff_49a6_8efa_2fd86b2df134;
wire [0:1-1] ramOutInverterd549a24b_5bd3_4545_8a65_be8e217e7128;
wire [0:1-1] ramInInverter4a87e395_2851_4f46_ae4b_ea2cbb7907c1;
wire [0:16-1] memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a;
wire [0:16-1] allInputsFor3daa3326_e280_4750_bd67_f7d54da435b2= {main_busc9836d79_6631_466f_aee1_3c89816d2705[0],main_busc9836d79_6631_466f_aee1_3c89816d2705[1],main_busc9836d79_6631_466f_aee1_3c89816d2705[2],main_busc9836d79_6631_466f_aee1_3c89816d2705[3],main_busc9836d79_6631_466f_aee1_3c89816d2705[4],main_busc9836d79_6631_466f_aee1_3c89816d2705[5],main_busc9836d79_6631_466f_aee1_3c89816d2705[6],main_busc9836d79_6631_466f_aee1_3c89816d2705[7],main_busc9836d79_6631_466f_aee1_3c89816d2705[8],main_busc9836d79_6631_466f_aee1_3c89816d2705[9],main_busc9836d79_6631_466f_aee1_3c89816d2705[10],main_busc9836d79_6631_466f_aee1_3c89816d2705[11],main_busc9836d79_6631_466f_aee1_3c89816d2705[12],main_busc9836d79_6631_466f_aee1_3c89816d2705[13],main_busc9836d79_6631_466f_aee1_3c89816d2705[14],main_busc9836d79_6631_466f_aee1_3c89816d2705[15]};
wire [0:16-1] main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f;
wire [0:16-1] main_rame0c1cbbc_0d69_4f0b_9f87_35c2e6a8c5f0;
wire [0:16-1] allAddress1InputsFor71ecd96a_6679_47c3_97b0_38112556e5f8= {memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[0],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[1],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[2],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[3],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[4],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[5],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[6],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[7],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[8],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[9],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[10],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[11],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[12],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[13],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[14],memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a[15]};
wire [0:16-1] allAddress2InputsFor71ecd96a_6679_47c3_97b0_38112556e5f8= {UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED};
wire [0:16-1] allDataInputsFor71ecd96a_6679_47c3_97b0_38112556e5f8= {main_busc9836d79_6631_466f_aee1_3c89816d2705[0],main_busc9836d79_6631_466f_aee1_3c89816d2705[1],main_busc9836d79_6631_466f_aee1_3c89816d2705[2],main_busc9836d79_6631_466f_aee1_3c89816d2705[3],main_busc9836d79_6631_466f_aee1_3c89816d2705[4],main_busc9836d79_6631_466f_aee1_3c89816d2705[5],main_busc9836d79_6631_466f_aee1_3c89816d2705[6],main_busc9836d79_6631_466f_aee1_3c89816d2705[7],main_busc9836d79_6631_466f_aee1_3c89816d2705[8],main_busc9836d79_6631_466f_aee1_3c89816d2705[9],main_busc9836d79_6631_466f_aee1_3c89816d2705[10],main_busc9836d79_6631_466f_aee1_3c89816d2705[11],main_busc9836d79_6631_466f_aee1_3c89816d2705[12],main_busc9836d79_6631_466f_aee1_3c89816d2705[13],main_busc9836d79_6631_466f_aee1_3c89816d2705[14],main_busc9836d79_6631_466f_aee1_3c89816d2705[15]};
wire [0:16-1] ram_output_buffer3972ecc1_1f51_4184_b8e4_d9544807d8a1;
wire [0:16-1] allInputsFordf01f270_e77e_4a0a_8060_f47d44c5a441= {main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[0],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[1],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[2],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[3],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[4],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[5],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[6],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[7],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[8],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[9],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[10],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[11],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[12],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[13],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[14],main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f[15]};
wire [0:16-1] OUT_registera099ef86_3ed1_4cf2_b730_68e78e3ed246;
wire [0:16-1] allInputsFore635e738_a37c_48ba_b4c6_ead7d6326972= {main_busc9836d79_6631_466f_aee1_3c89816d2705[0],main_busc9836d79_6631_466f_aee1_3c89816d2705[1],main_busc9836d79_6631_466f_aee1_3c89816d2705[2],main_busc9836d79_6631_466f_aee1_3c89816d2705[3],main_busc9836d79_6631_466f_aee1_3c89816d2705[4],main_busc9836d79_6631_466f_aee1_3c89816d2705[5],main_busc9836d79_6631_466f_aee1_3c89816d2705[6],main_busc9836d79_6631_466f_aee1_3c89816d2705[7],main_busc9836d79_6631_466f_aee1_3c89816d2705[8],main_busc9836d79_6631_466f_aee1_3c89816d2705[9],main_busc9836d79_6631_466f_aee1_3c89816d2705[10],main_busc9836d79_6631_466f_aee1_3c89816d2705[11],main_busc9836d79_6631_466f_aee1_3c89816d2705[12],main_busc9836d79_6631_466f_aee1_3c89816d2705[13],main_busc9836d79_6631_466f_aee1_3c89816d2705[14],main_busc9836d79_6631_466f_aee1_3c89816d2705[15]};
wire [0:16-1] B_register02f0c179_9e81_4efc_9c33_92b3b86806b2;
wire [0:16-1] allInputsFor09102eab_fe97_4116_a7dd_2ca9b82f4a20= {main_busc9836d79_6631_466f_aee1_3c89816d2705[0],main_busc9836d79_6631_466f_aee1_3c89816d2705[1],main_busc9836d79_6631_466f_aee1_3c89816d2705[2],main_busc9836d79_6631_466f_aee1_3c89816d2705[3],main_busc9836d79_6631_466f_aee1_3c89816d2705[4],main_busc9836d79_6631_466f_aee1_3c89816d2705[5],main_busc9836d79_6631_466f_aee1_3c89816d2705[6],main_busc9836d79_6631_466f_aee1_3c89816d2705[7],main_busc9836d79_6631_466f_aee1_3c89816d2705[8],main_busc9836d79_6631_466f_aee1_3c89816d2705[9],main_busc9836d79_6631_466f_aee1_3c89816d2705[10],main_busc9836d79_6631_466f_aee1_3c89816d2705[11],main_busc9836d79_6631_466f_aee1_3c89816d2705[12],main_busc9836d79_6631_466f_aee1_3c89816d2705[13],main_busc9836d79_6631_466f_aee1_3c89816d2705[14],main_busc9836d79_6631_466f_aee1_3c89816d2705[15]};
wire [0:16-1] B_reg_buffer2204c583_7ca5_4d97_853a_6aae27c34ad4;
wire [0:16-1] allInputsFord9884237_aa90_42d3_a91b_5874f42cc02a= {B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[0],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[1],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[2],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[3],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[4],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[5],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[6],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[7],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[8],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[9],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[10],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[11],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[12],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[13],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[14],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[15]};
wire [0:16-1] A_register39b45797_e39d_4908_9faa_9239a7a9fd1a;
wire [0:16-1] allInputsFor69ae5dd0_c2e7_42f9_94ab_1f6544820109= {main_busc9836d79_6631_466f_aee1_3c89816d2705[0],main_busc9836d79_6631_466f_aee1_3c89816d2705[1],main_busc9836d79_6631_466f_aee1_3c89816d2705[2],main_busc9836d79_6631_466f_aee1_3c89816d2705[3],main_busc9836d79_6631_466f_aee1_3c89816d2705[4],main_busc9836d79_6631_466f_aee1_3c89816d2705[5],main_busc9836d79_6631_466f_aee1_3c89816d2705[6],main_busc9836d79_6631_466f_aee1_3c89816d2705[7],main_busc9836d79_6631_466f_aee1_3c89816d2705[8],main_busc9836d79_6631_466f_aee1_3c89816d2705[9],main_busc9836d79_6631_466f_aee1_3c89816d2705[10],main_busc9836d79_6631_466f_aee1_3c89816d2705[11],main_busc9836d79_6631_466f_aee1_3c89816d2705[12],main_busc9836d79_6631_466f_aee1_3c89816d2705[13],main_busc9836d79_6631_466f_aee1_3c89816d2705[14],main_busc9836d79_6631_466f_aee1_3c89816d2705[15]};
wire [0:0] A_B_Comparator86e74c02_c005_446c_8ce6_66c233a9c33f;
wire [0:16-1] allADataInputsFor68c22178_5b5f_4f29_a15e_c700b174775b= {A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[0],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[1],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[2],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[3],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[4],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[5],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[6],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[7],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[8],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[9],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[10],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[11],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[12],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[13],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[14],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[15]};
wire [0:16-1] allBDataInputsFor68c22178_5b5f_4f29_a15e_c700b174775b= {B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[0],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[1],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[2],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[3],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[4],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[5],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[6],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[7],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[8],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[9],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[10],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[11],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[12],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[13],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[14],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[15]};
wire [0:0] A_B_Comparator19d35a3e_34be_412c_a620_b93db6696e69;
wire [0:1-1] invertALESSBbdb6bf57_c505_4e54_bb3e_2be80a74197c;
wire [0:1-1] invertAEQUALB85175fc8_a510_4772_a360_fc8816d9933c;
wire [0:1-1] AGREATERB05e0f19f_9fe1_4213_ae3a_90ede602e4ea;
wire [0:4-1] flags_registerf2b682fc_d636_4f65_9774_f14981d5fbee;
wire [0:4-1] allInputsFor8b06fe82_8eba_45f2_b113_c96d2e273779= {AGREATERB05e0f19f_9fe1_4213_ae3a_90ede602e4ea[0],A_B_Comparator86e74c02_c005_446c_8ce6_66c233a9c33f[0],A_B_Comparator19d35a3e_34be_412c_a620_b93db6696e69[0],UNCONNECTED};
wire [0:1-1] ANDALESSB2dda9b72_aa6f_4275_8776_0f3e0575e305;
wire [0:1-1] ANDAEQUALB17dee584_e47e_4386_9732_b03456ab399b;
wire [0:1-1] ANDAGBa1ce5cf3_a89f_4b12_bb03_5c74a5eff071;
wire [0:1-1] OR16e3d7cd3_9956_483d_850a_3229f6c738d3;
wire [0:1-1] OR2a0e395ba_4417_4c9e_b219_c03e2c96b6ca;
wire [0:1-1] loadInverter37410143_97c2_4005_980b_471fcccbbe12;
wire [0:16-1] A_reg_bufferc30d247a_f405_45be_ae39_370545cf0c32;
wire [0:16-1] allInputsFor818e39ff_8a35_42ca_b173_1a6ef4a00363= {A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[0],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[1],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[2],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[3],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[4],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[5],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[6],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[7],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[8],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[9],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[10],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[11],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[12],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[13],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[14],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[15]};
wire [0:16-1] adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9;
wire adder4c7a94c4_fe63_49d7_bb56_11b1dc4e8c21;
wire [0:16-1] allADataInputsFor8343e094_63fc_4e79_aac1_211ca15dd109= {A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[0],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[1],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[2],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[3],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[4],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[5],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[6],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[7],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[8],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[9],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[10],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[11],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[12],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[13],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[14],A_register39b45797_e39d_4908_9faa_9239a7a9fd1a[15]};
wire [0:16-1] allBDataInputsFor8343e094_63fc_4e79_aac1_211ca15dd109= {B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[0],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[1],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[2],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[3],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[4],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[5],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[6],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[7],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[8],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[9],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[10],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[11],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[12],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[13],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[14],B_register02f0c179_9e81_4efc_9c33_92b3b86806b2[15]};
wire [0:16-1] adder_bufferaeef3eb0_a442_4671_badd_0c88a1aa15b1;
wire [0:16-1] allInputsFora8bda0b6_0de8_4d35_b4e7_a63a642adb0c= {adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[0],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[1],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[2],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[3],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[4],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[5],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[6],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[7],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[8],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[9],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[10],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[11],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[12],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[13],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[14],adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9[15]};
wire [0:10-1] sigGend9b889a4_c50b_443b_82a8_107ab69b54fb;
wire [0:9-1] sigGen33b569be_347d_4e2e_b7e1_220c55660bc4;
wire sigGen2f827261_0247_43f7_be05_a7fd356b777c;
wire sigGene437f6f5_c2ba_4285_b497_0679cdfb1408;


voltageRail COMenableOnb285e707_478c_4391_89b3_26fd2d281ff8 ( 
                .data(HIGH), 
                .Q(COMenableOn83d9b911_01ca_498e_bf35_a12a0bc8d8fc) );


voltageRail invertONa0b68c67_7240_4904_aa9f_477824bd8694 ( 
                .data(HIGH), 
                .Q(invertONe76738cd_1688_4337_82e0_572c04e1653a) );


voltageRail signalBankOutputOn33ecaa4e_8ea0_4761_80fc_444aa7c70ad8 ( 
                .data(HIGH), 
                .Q(signalBankOutputOnc6b73168_d681_4c8f_9f32_8847a722cb64) );


voltageRail invertOn208cf4fc_0bb2_4977_9142_e449b2b3784b ( 
                .data(HIGH), 
                .Q(invertOn642c198a_67d4_4016_8e09_267f06eca4b0) );


voltageRail eepromChipEnable2996a10b_723d_4cb3_a40d_9b8189267f3a ( 
                .data(LOW), 
                .Q(eepromChipEnable3dacf7a7_7710_4c5b_a7c6_54ea4e2140bf) );


voltageRail eepromOutEnable9caafcc9_9a72_4730_bdd7_0459582bc7cc ( 
                .data(LOW), 
                .Q(eepromOutEnablef23e570a_5744_47b9_a3b4_6d2d272fe79e) );


voltageRail eepromWriteDisabledeed6d74f_4e1c_41db_b0e0_a570075ff11b ( 
                .data(HIGH), 
                .Q(eepromWriteDisabled8754c998_eb95_4b78_8176_ceac2ba4932a) );


voltageRail load_disableda8513787_ea55_4931_b987_402e243b3de5 ( 
                .data(HIGH), 
                .Q(load_disabled22823285_6d90_4668_a504_81f5f67bdda3) );


voltageRail count_enable_microcode_counterc3d05671_0874_4b6b_b6eb_74ae2c44dc6d ( 
                .data(LOW), 
                .Q(count_enable_microcode_counter546e169e_abff_418a_ad0f_1d848446abde) );


voltageRail invert_clock_signal_enable1d9d763f_c081_4eb5_9de1_d171fa2a2b19 ( 
                .data(HIGH), 
                .Q(invert_clock_signal_enable2bb92058_c538_4490_9e1b_3a454c9a349d) );


voltageRail clearPCd379a043_afd5_4432_aecc_3205532146dd ( 
                .data(HIGH), 
                .Q(clearPCc4e845ab_e0f6_4665_aad6_d6af8f0371ec) );


voltageRail ram_chipEnablee75d2572_a8c4_4a85_bce1_689fbfae7ab8 ( 
                .data(LOW), 
                .Q(ram_chipEnablee80517cb_5a91_4627_a96e_bc2d39ac54e8) );









nRegister #(.n(16)) comDataRegd1e264de_451f_4c93_8fad_80433e9cd974 ( 
                .data(allInputsFord1e264de_451f_4c93_8fad_80433e9cd974), 
                .clock(clock[0]), 
                .enable(COMenableOn83d9b911_01ca_498e_bf35_a12a0bc8d8fc[0]),
                 .Q(comDataReg746c76e9_dda0_4435_ae33_ebd756abc438) );



nRegister #(.n(16)) comStatusReg7e71762f_dd23_485e_8d4b_3c437f5bdc8f ( 
                .data(allInputsFor7e71762f_dd23_485e_8d4b_3c437f5bdc8f), 
                .clock(clock[0]), 
                .enable(COMenableOn83d9b911_01ca_498e_bf35_a12a0bc8d8fc[0]),
                 .Q(comStatusReg113e047a_ffe7_4336_9075_948117f266b4) );




inverter invert_clock_signal6f300528_b418_4bb5_b789_b1430e12e93d ( 
                .data(clock[0]), 
                .Q(invert_clock_signalf3dffce2_f851_4666_8dd2_d273524fd36e), 
                .outputEnable(invert_clock_signal_enable2bb92058_c538_4490_9e1b_3a454c9a349d[0]) );


binaryCounter #(.n(3)) microcode_step_counterbf0cecd0_12d4_46f3_bc9f_f1807cc9e244 (
                .D(UNCONNECTED),
                .clr_(invert_clock_signal_enable2bb92058_c538_4490_9e1b_3a454c9a349d[0]),
                .load_(load_disabled22823285_6d90_4668_a504_81f5f67bdda3[0]),
                .clock(invert_clock_signalf3dffce2_f851_4666_8dd2_d273524fd36e[0]),
                .enable1_(count_enable_microcode_counter546e169e_abff_418a_ad0f_1d848446abde[0]),
                .enable2_(count_enable_microcode_counter546e169e_abff_418a_ad0f_1d848446abde[0]),
                .Q(microcode_step_counter96e7bcf8_2694_4d1e_966d_f287e2d967f2));


inverter decodeInverteraf1b03bf_7323_4983_8131_8f7cfd31cb11 ( 
                .data(microcode_step_counter96e7bcf8_2694_4d1e_966d_f287e2d967f2[2]), 
                .Q(decodeInverter89027d47_cdff_419e_b7f6_ac0f86d26ab4), 
                .outputEnable(invert_clock_signal_enable2bb92058_c538_4490_9e1b_3a454c9a349d[0]) );







twoLineToFourLineDecoder decoder2231fd147_4a45_4d5c_8c36_bd1e7f68e98d (
                 microcode_step_counter96e7bcf8_2694_4d1e_966d_f287e2d967f2[0],
                  microcode_step_counter96e7bcf8_2694_4d1e_966d_f287e2d967f2[1],
                   microcode_step_counter96e7bcf8_2694_4d1e_966d_f287e2d967f2[2],
                    decoder253131089_5adf_4a37_9c87_5eb622c98482,
                    decoder28be7dc97_11ed_4b75_9f6a_ff82f74fedef,
                    decoder25acf8ade_5d36_43cc_bfca_66f0bc0589e7,
                    decoder26a0670af_a516_4af9_a2ad_419a268414c5);





twoLineToFourLineDecoder decoder1305544a6_ddb2_4e0e_9b6d_3378d97b5746 (
                 microcode_step_counter96e7bcf8_2694_4d1e_966d_f287e2d967f2[0],
                  microcode_step_counter96e7bcf8_2694_4d1e_966d_f287e2d967f2[1],
                   decodeInverter89027d47_cdff_419e_b7f6_ac0f86d26ab4[0],
                    decoder16b6d2945_c76d_4f2e_af7c_f7d038b8774c,
                    decoder1f5362485_b650_4a5d_b813_60ccd869e377,
                    decoder1415a997c_8e24_4adc_b46c_de8326b6138d,
                    decoder1e0ce0bc8_81d9_4c7b_93b6_2324ee7d091a);


binaryCounter #(.n(16)) Program_Counter9946fcd9_660e_49b5_9a14_0ca62d4f4e0c (
                .D(main_busc9836d79_6631_466f_aee1_3c89816d2705),
                .clr_(clearPCc4e845ab_e0f6_4665_aad6_d6af8f0371ec[0]),
                .load_(loadInverter37410143_97c2_4005_980b_471fcccbbe12[0]),
                .clock(clock[0]),
                .enable1_(countEnableInverter4fbd0ff4_82ff_49a6_8efa_2fd86b2df134[0]),
                .enable2_(countEnableInverter4fbd0ff4_82ff_49a6_8efa_2fd86b2df134[0]),
                .Q(Program_Counterc6407a7e_be9d_4a92_bad8_140191e18c9f));



nBuffer  #(.n(16)) pc_buffer58054f87_678b_435a_bf3f_7d5b7e6673f2 (
                  .data(allInputsFor58054f87_678b_435a_bf3f_7d5b7e6673f2),
                  .Q(pc_buffer3f2bc22c_549e_4203_a36b_46721292d3f5), 
                  .outputEnable(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[4]) );




bus_mux #(.bus_count(7),.mux_width(16)) main_bus1f2de791_5ca6_4a0a_9ee4_a813c859e875 (
                .selects(allSelectsFor1f2de791_5ca6_4a0a_9ee4_a813c859e875),
                .data_in(allInputsFor1f2de791_5ca6_4a0a_9ee4_a813c859e875),
                .data_out(main_busc9836d79_6631_466f_aee1_3c89816d2705));



nRegister #(.n(16)) instruction_register1a62bf14_a1cb_477d_8bb0_ce107402fac4 ( 
                .data(allInputsFor1a62bf14_a1cb_477d_8bb0_ce107402fac4), 
                .clock(clock[0]), 
                .enable(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[2]),
                 .Q(instruction_register43ed279e_9678_4a32_bea5_e073bccd2bc6) );




staticRamDiscretePorts #(.ROMFILE(ROMFILE),.DATA_WIDTH(32),.ADDR_WIDTH(8)) microcode_rom901242d9_fbd3_4d02_9d3f_dd9a8202315b (
                 .address(allAddressInputsFor901242d9_fbd3_4d02_9d3f_dd9a8202315b),
                  .data(allDataInputsFor901242d9_fbd3_4d02_9d3f_dd9a8202315b), 
                  .cs_(eepromChipEnable3dacf7a7_7710_4c5b_a7c6_54ea4e2140bf[0]),
                   .we_(eepromWriteDisabled8754c998_eb95_4b78_8176_ceac2ba4932a[0]),
                   .oe_(eepromOutEnablef23e570a_5744_47b9_a3b4_6d2d272fe79e[0]),
                    .clock(ClockFaster[0]),
                   .Q(microcode_rom5259d365_e5b4_4aaa_8c9b_8ddbe7d13179));



nBuffer  #(.n(32)) microCode_SIGNAL_bank1f2d9b52_8055_4dea_82a4_9a5c3d8ab7d2 (
                  .data(allInputsFor1f2d9b52_8055_4dea_82a4_9a5c3d8ab7d2),
                  .Q(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc), 
                  .outputEnable(signalBankOutputOnc6b73168_d681_4c8f_9f32_8847a722cb64[0]) );



nBuffer  #(.n(16)) comDataRegBuffer05b7ffbf_026b_41fc_9662_0042d23f59d8 (
                  .data(allInputsFor05b7ffbf_026b_41fc_9662_0042d23f59d8),
                  .Q(comDataRegBufferb1f5d7c0_40bc_40a0_9014_2a76d5195b7e), 
                  .outputEnable(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[25]) );



nRegister #(.n(16)) comControlReg21c5e114_9b5d_4b2e_b592_e6ec52008c02 ( 
                .data(allInputsFor21c5e114_9b5d_4b2e_b592_e6ec52008c02), 
                .clock(clock[0]), 
                .enable(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[24]),
                 .Q(comControlReg86c53e62_b97e_4efe_90f0_f0d8078e752b) );




SPIComPart #(.n(16)) spi_test1334cb21_8389_41b7_93b5_b04a4fedbdee (
                .i_controlReg(AllControlInputsFor1334cb21_8389_41b7_93b5_b04a4fedbdee),
                .o_dataReg(spi_test4723fc92_1146_4f81_9d86_279839648f34),
                .o_statReg(spi_test8a3c6588_71e9_4908_afdd_a6031c12faa6),
                .i_serial(SERIALIN),
                .o_enable(ENABLEOUT),
                .o_clock(CLOCKOUT),
               .i_clk(clock[0]));



nBuffer  #(.n(16)) comStatusRegBuffer6d7be101_b416_4f3e_9b11_3747f2d4387b (
                  .data(allInputsFor6d7be101_b416_4f3e_9b11_3747f2d4387b),
                  .Q(comStatusRegBuffer480dab83_8f38_4c38_90d5_c2f1a69a79ae), 
                  .outputEnable(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[23]) );


inverter countEnableInverter810f9115_2fc1_4c47_86f4_fe049dd60ac1 ( 
                .data(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[6]), 
                .Q(countEnableInverter4fbd0ff4_82ff_49a6_8efa_2fd86b2df134), 
                .outputEnable(invertOn642c198a_67d4_4016_8e09_267f06eca4b0[0]) );


inverter ramOutInverter1ecb36d8_19ea_45b9_a863_03e403b2efbf ( 
                .data(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[1]), 
                .Q(ramOutInverterd549a24b_5bd3_4545_8a65_be8e217e7128), 
                .outputEnable(invertOn642c198a_67d4_4016_8e09_267f06eca4b0[0]) );


inverter ramInInverter910bdabe_177f_4ef4_b5ee_13acac71208a ( 
                .data(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[0]), 
                .Q(ramInInverter4a87e395_2851_4f46_ae4b_ea2cbb7907c1), 
                .outputEnable(invertOn642c198a_67d4_4016_8e09_267f06eca4b0[0]) );



nRegister #(.n(16)) memory_address_register3daa3326_e280_4750_bd67_f7d54da435b2 ( 
                .data(allInputsFor3daa3326_e280_4750_bd67_f7d54da435b2), 
                .clock(clock[0]), 
                .enable(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[18]),
                 .Q(memory_address_registerd982aaca_d33f_4ad1_80c5_48983776002a) );






dualPortStaticRam #(.ROMFILE(RAMFILE),.DATA_WIDTH(16),.ADDR_WIDTH(16)) main_ram71ecd96a_6679_47c3_97b0_38112556e5f8 (
                .address_1(allAddress1InputsFor71ecd96a_6679_47c3_97b0_38112556e5f8),
                .address_2(allAddress2InputsFor71ecd96a_6679_47c3_97b0_38112556e5f8),
                 .data(allDataInputsFor71ecd96a_6679_47c3_97b0_38112556e5f8), 
                 .cs_(ram_chipEnablee80517cb_5a91_4627_a96e_bc2d39ac54e8[0]),
                  .we_(ramInInverter4a87e395_2851_4f46_ae4b_ea2cbb7907c1[0]),
                  .oe_(ramOutInverterd549a24b_5bd3_4545_8a65_be8e217e7128[0]),
                  .clock(ClockFaster[0]),
                  .clock2(ClockFaster[0]),
                  .Q_1(main_ramf16fbf88_ad99_462a_bb26_8a5c29fc704f),
                  .Q_2(main_rame0c1cbbc_0d69_4f0b_9f87_35c2e6a8c5f0));



nBuffer  #(.n(16)) ram_output_bufferdf01f270_e77e_4a0a_8060_f47d44c5a441 (
                  .data(allInputsFordf01f270_e77e_4a0a_8060_f47d44c5a441),
                  .Q(ram_output_buffer3972ecc1_1f51_4184_b8e4_d9544807d8a1), 
                  .outputEnable(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[1]) );



nRegister #(.n(16)) OUT_registere635e738_a37c_48ba_b4c6_ead7d6326972 ( 
                .data(allInputsFore635e738_a37c_48ba_b4c6_ead7d6326972), 
                .clock(clock[0]), 
                .enable(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[16]),
                 .Q(OUT_registera099ef86_3ed1_4cf2_b730_68e78e3ed246) );



nRegister #(.n(16)) B_register09102eab_fe97_4116_a7dd_2ca9b82f4a20 ( 
                .data(allInputsFor09102eab_fe97_4116_a7dd_2ca9b82f4a20), 
                .clock(clock[0]), 
                .enable(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[14]),
                 .Q(B_register02f0c179_9e81_4efc_9c33_92b3b86806b2) );



nBuffer  #(.n(16)) B_reg_bufferd9884237_aa90_42d3_a91b_5874f42cc02a (
                  .data(allInputsFord9884237_aa90_42d3_a91b_5874f42cc02a),
                  .Q(B_reg_buffer2204c583_7ca5_4d97_853a_6aae27c34ad4), 
                  .outputEnable(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[15]) );



nRegister #(.n(16)) A_register69ae5dd0_c2e7_42f9_94ab_1f6544820109 ( 
                .data(allInputsFor69ae5dd0_c2e7_42f9_94ab_1f6544820109), 
                .clock(clock[0]), 
                .enable(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[7]),
                 .Q(A_register39b45797_e39d_4908_9faa_9239a7a9fd1a) );





nbitComparator #(.n(16)) A_B_Comparator68c22178_5b5f_4f29_a15e_c700b174775b (
                .a(allADataInputsFor68c22178_5b5f_4f29_a15e_c700b174775b),
                .b(allBDataInputsFor68c22178_5b5f_4f29_a15e_c700b174775b),
                .equal(A_B_Comparator86e74c02_c005_446c_8ce6_66c233a9c33f),
                .lower(A_B_Comparator19d35a3e_34be_412c_a620_b93db6696e69));


inverter invertALESSB2f377613_4654_45f2_8cc4_9b0cccf8470e ( 
                .data(A_B_Comparator19d35a3e_34be_412c_a620_b93db6696e69[0]), 
                .Q(invertALESSBbdb6bf57_c505_4e54_bb3e_2be80a74197c), 
                .outputEnable(invertONe76738cd_1688_4337_82e0_572c04e1653a[0]) );


inverter invertAEQUALB8498ca92_daea_48e1_a913_c98432eaa06e ( 
                .data(A_B_Comparator86e74c02_c005_446c_8ce6_66c233a9c33f[0]), 
                .Q(invertAEQUALB85175fc8_a510_4772_a360_fc8816d9933c), 
                .outputEnable(invertONe76738cd_1688_4337_82e0_572c04e1653a[0]) );


ANDGATE AGREATERBec61e00a_bf7e_4acc_b491_fc04a23e5117 ( 
                invertAEQUALB85175fc8_a510_4772_a360_fc8816d9933c[0], 
                invertALESSBbdb6bf57_c505_4e54_bb3e_2be80a74197c[0], 
                AGREATERB05e0f19f_9fe1_4213_ae3a_90ede602e4ea );



nRegister #(.n(4)) flags_register8b06fe82_8eba_45f2_b113_c96d2e273779 ( 
                .data(allInputsFor8b06fe82_8eba_45f2_b113_c96d2e273779), 
                .clock(clock[0]), 
                .enable(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[22]),
                 .Q(flags_registerf2b682fc_d636_4f65_9774_f14981d5fbee) );


ANDGATE ANDALESSB5e1acf0b_8bf5_4987_b79f_d40f97d175b5 ( 
                flags_registerf2b682fc_d636_4f65_9774_f14981d5fbee[2], 
                microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[19], 
                ANDALESSB2dda9b72_aa6f_4275_8776_0f3e0575e305 );


ANDGATE ANDAEQUALB59ff81b9_d107_4c6c_80cd_9ca7a6340b5a ( 
                flags_registerf2b682fc_d636_4f65_9774_f14981d5fbee[1], 
                microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[20], 
                ANDAEQUALB17dee584_e47e_4386_9732_b03456ab399b );


ANDGATE ANDAGB62300367_bc2f_40c2_8c5f_e7a7c8b21b7d ( 
                flags_registerf2b682fc_d636_4f65_9774_f14981d5fbee[0], 
                microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[21], 
                ANDAGBa1ce5cf3_a89f_4b12_bb03_5c74a5eff071 );


ORGATE OR1e958fad0_0e6e_4c61_ae77_abc8da0e5585 ( 
                ANDAGBa1ce5cf3_a89f_4b12_bb03_5c74a5eff071[0], 
                ANDAEQUALB17dee584_e47e_4386_9732_b03456ab399b[0],
                OR16e3d7cd3_9956_483d_850a_3229f6c738d3);


ORGATE OR24ad324b5_d637_442d_a8ad_f53d36abdeb1 ( 
                OR16e3d7cd3_9956_483d_850a_3229f6c738d3[0], 
                ANDALESSB2dda9b72_aa6f_4275_8776_0f3e0575e305[0],
                OR2a0e395ba_4417_4c9e_b219_c03e2c96b6ca);


inverter loadInvertercf11872e_c1e1_42e3_b401_53341d37d73b ( 
                .data(OR2a0e395ba_4417_4c9e_b219_c03e2c96b6ca[0]), 
                .Q(loadInverter37410143_97c2_4005_980b_471fcccbbe12), 
                .outputEnable(invertONe76738cd_1688_4337_82e0_572c04e1653a[0]) );



nBuffer  #(.n(16)) A_reg_buffer818e39ff_8a35_42ca_b173_1a6ef4a00363 (
                  .data(allInputsFor818e39ff_8a35_42ca_b173_1a6ef4a00363),
                  .Q(A_reg_bufferc30d247a_f405_45be_ae39_370545cf0c32), 
                  .outputEnable(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[8]) );





nbitAdder #(.n(16)) adder8343e094_63fc_4e79_aac1_211ca15dd109 (
                 .sub(SUBMODE),
                .cin(UNCONNECTED),
                .x(allADataInputsFor8343e094_63fc_4e79_aac1_211ca15dd109),
                .y(allBDataInputsFor8343e094_63fc_4e79_aac1_211ca15dd109),
                .sum(adder23d3a74a_7b45_4afd_bb93_72a68c0db7e9),
                .cout(adder4c7a94c4_fe63_49d7_bb56_11b1dc4e8c21));



nBuffer  #(.n(16)) adder_buffera8bda0b6_0de8_4d35_b4e7_a63a642adb0c (
                  .data(allInputsFora8bda0b6_0de8_4d35_b4e7_a63a642adb0c),
                  .Q(adder_bufferaeef3eb0_a442_4671_badd_0c88a1aa15b1), 
                  .outputEnable(microCode_SIGNAL_banke04c9e8f_7cff_4d31_b46c_a82e06929fdc[9]) );





vgaSignalGenerator sigGenb4b645dc_f832_4287_80a7_10781a6db51a (
                .i_clk(clock[0]),
                .i_pix_stb(25MHZCLOCK),
                .o_hs(sigGen2f827261_0247_43f7_be05_a7fd356b777c),
                .o_vs(sigGene437f6f5_c2ba_4285_b497_0679cdfb1408),
                .o_x(sigGend9b889a4_c50b_443b_82a8_107ab69b54fb),
                .o_y(sigGen33b569be_347d_4e2e_b7e1_220c55660bc4)
            );

        reg [32:0] counter = 32'b0;
            always @ (posedge CLK) 
            begin
                LED = REPLACE WITH OUT REG STRING;          
                counter <= counter + 1;
                if(REPLACE WITH MICROCODE OUTPUT BANK[17] == 0) begin
                clock[0] <= counter[9];
                end
                //TODO see if it works if we set strobe to counter[3 or 4];
                 //{pix_stb, counter} <= counter + 32'h40000000;  // divide by 4: (2^16)/4 = 0x4000
                 //RAM clock...
                ClockFaster[0] <= counter[5];
               
            end

        endmodule
        