
         (* DONT_TOUCH = "yes" *)
            module nRegister(data,clock,enable,Q);
        parameter n = 8;
        input [0:n-1] data;
        input clock,enable;
        output reg [0:n-1] Q = {n-1{1'b0}};

        always@(posedge clock)
            if(enable)
                Q<=data;
            endmodule
        
 (* DONT_TOUCH = "yes" *)
            module voltageRail(data,Q);
        input wire data;
        output reg Q;
        always@(data)
        Q <= data;
        endmodule
        
 (* DONT_TOUCH = "yes" *)
            module nBuffer(data,Q,outputEnable);
        parameter n=8;
        input [0:n-1] data;
        input outputEnable;
        output reg [0:n-1] Q;
    
        always@(outputEnable,data)
        if(outputEnable)
            Q <= data;
        else
            Q <= {n{1'b0}};
    endmodule
 (* DONT_TOUCH = "yes" *)
            module inverter(data,Q,outputEnable);
    input data,outputEnable;
    output reg Q;
    always@(data,outputEnable)
        if(outputEnable)
            Q <= ~data;
        else
            Q<=1'b0;
    endmodule
    
 (* DONT_TOUCH = "yes" *)
            module ANDGATE(a,b,c);
        input a,b;
        output c;
        and a1 (c,a,b);
        endmodule
module ORGATE(a,b,c);
    input a,b;
    output c;
    or a1 (c,a,b);
        endmodule
 (* DONT_TOUCH = "yes" *)
            module bus_mux ( selects, data_in, data_out ); 
        parameter bus_count = 16;                   // number of input buses 
        parameter mux_width = 8;                    // bit width of data buses 
        input  [0:bus_count-1]           selects;   // one-hot select signals 
        input  [0:mux_width*bus_count-1] data_in;   // concatenated input buses 
        output reg [0:mux_width-1]                 data_out;  // output data bus 
        
        integer i=0;
        integer j=0;
        always@(selects,data_in)
        begin
        data_out = 'b0; 
    
                for (i = 0; i < bus_count; i = i + 1) 
                        for (j = 0; j < mux_width; j = j + 1) 
                                data_out[j] = data_out[j] | data_in[mux_width*i +j] &selects[i]; 
        end  // always 
        endmodule
        
 (* DONT_TOUCH = "yes" *)
        module nbitAdder(sub,cin,x,y,sum,cout);
        parameter n = 8;
        input sub,cin;
        input [0:n-1] x,y;
        output [0:n-1]sum;
        output cout;
        wire[0:n-1] onesComplement;

        assign onesComplement = {n{sub}}^y +sub;
        assign {cout,sum} = {1'b0,x} + {1'b0,onesComplement} + cin;
        endmodule
        
 (* DONT_TOUCH = "yes" *)
            module binaryCounter(D,clr_,load_,clock,enable1_,enable2_,Q);
        parameter n = 8;
        input [0:n-1] D;
        input clr_,clock,enable1_,enable2_,load_;
        output reg [0:n-1] Q = {n-1{1'b0}};

        always@(posedge clock)
        if(!clr_)
        Q <= 0;
        else if (!load_)
        Q <= D;
        else if ((!enable1_) && (!enable2_))
        Q <= Q + 1;
        endmodule
        
 (* DONT_TOUCH = "yes" *)
            module nbitComparator (
            input wire [0:n-1] a,
            input wire [0:n-1] b,
            output wire equal,
            output wire lower
          );
          parameter n = 8;
          assign equal = (a===b);
          assign lower = (a<b)?1'b1:1'b0;
          endmodule
          
 (* DONT_TOUCH = "yes" *)
            module twoLineToFourLineDecoder (a,b,en_,y0,y1,y2,y3);
          input a, b, en_;
          output y0,y1,y2,y3;
          assign y0= (~a) & (~b) & (~en_);
          assign y1= (~a) & b & (~en_);
          assign y2= a & (~ b) & (~en_);
          assign y3= a & b & (~en_);
          endmodule
          

        (* DONT_TOUCH = "yes" *)
        //-----------------------------------------------------
        module staticRamDiscretePorts (
            address     , // Address Input
            data        , // Data input
            cs_,
            we_,
            oe_,
            clock,
            Q               //output
            );
            parameter ROMFILE = "noFile";
            parameter DATA_WIDTH = 8 ;
            parameter ADDR_WIDTH = 8 ;
            parameter RAM_DEPTH = 1 << ADDR_WIDTH;
            
        
            //--------------Input Ports----------------------- 
            input [0:ADDR_WIDTH-1] address ;
            input [0:DATA_WIDTH-1]  data;
            input cs_;
            input we_;
            input oe_;
            input clock;
        
            //--------------Output Ports----------------------- 
            output reg [0:DATA_WIDTH-1] Q;
            integer i;
            //--------------Internal variables----------------
            reg [0:DATA_WIDTH-1] mem [0:RAM_DEPTH-1];
            
            //--------------Code Starts Here------------------ 
            initial begin
             $readmemb(ROMFILE, mem);
              for (i = 0; i < RAM_DEPTH; i = i + 1) begin
              #1 $display("%d",mem[i]);
              end
            end
            
            always @(posedge clock)
            begin
              if (!cs_ && !we_)
                mem[address] = data;
               Q = (!cs_ && !oe_) ? mem[address] : {DATA_WIDTH{1'bz}};
            end
            
            endmodule
    
(* DONT_TOUCH = "yes" *)
    //-----------------------------------------------------
    module dualPortStaticRam (
        address_1     , // Address Input
        address_2     , // Address Input
        data        , // Data input
        cs_,
        we_,
        oe_,
        clock,
        clock2,
        Q_1,               //output
        Q_2               //output
        );
        parameter ROMFILE = "noFile";
        parameter DATA_WIDTH = 8 ;
        parameter ADDR_WIDTH = 8 ;
        parameter RAM_DEPTH = 1 << ADDR_WIDTH;
        
    
        //--------------Input Ports----------------------- 
        input [0:ADDR_WIDTH-1] address_1 ;
        input [0:ADDR_WIDTH-1] address_2 ;
        input [0:DATA_WIDTH-1]  data;
        input cs_;
        input we_;
        input oe_;
        input clock;
        input clock2;
    
        //--------------Output Ports----------------------- 
        output reg [0:DATA_WIDTH-1] Q_1;
        output reg [0:DATA_WIDTH-1] Q_2;
        integer i;
        //--------------Internal variables----------------
        reg [0:DATA_WIDTH-1] mem [0:RAM_DEPTH-1];
        
        //--------------Code Starts Here------------------ 
        initial begin
         $readmemb(ROMFILE, mem);
          for (i = 0; i < RAM_DEPTH; i = i + 1) begin
          #1 $display("%d",mem[i]);
          end
        end
        
        always @(posedge clock)
        begin
          if (!cs_ && !we_)
            mem[address_1] = data;
           Q_1 = (!cs_ && !oe_) ? mem[address_1] : {DATA_WIDTH{1'bz}};
           //Q_2 = mem[address_2];
        end

        always@(posedge clock2) begin
            Q_2 = mem[address_2];
        end
        
        endmodule
    
    
(* DONT_TOUCH = "yes" *)
    module vgaSignalGenerator(
        input wire i_clk,           // base clock
        input wire i_pix_stb,       // pixel clock strobe
        output wire o_hs,           // horizontal sync
        output wire o_vs,           // vertical sync
        output wire o_blanking,     // high during blanking interval
        output wire o_active,       // high during active pixel drawing
        output wire o_screenend,    // high for one tick at the end of screen
        output wire o_animate,      // high for one tick at end of active drawing
        output wire [9:0] o_x,      // current pixel x position
        output wire [8:0] o_y       // current pixel y position
        );
    
        // VGA timings https://timetoexplore.net/blog/video-timings-vga-720p-1080p
        localparam HS_STA = 16;              // horizontal sync start
        localparam HS_END = 16 + 96;         // horizontal sync end
        localparam HA_STA = 16 + 96 + 48;    // horizontal active pixel start
        localparam VS_STA = 480 + 11;        // vertical sync start
        localparam VS_END = 480 + 11 + 2;    // vertical sync end
        localparam VA_END = 480;             // vertical active pixel end
        localparam LINE   = 800;             // complete line (pixels)
        localparam SCREEN = 524;             // complete screen (lines)
    
        reg [9:0] h_count = 0;  // line position
        reg [9:0] v_count = 0;  // screen position
    
        // generate sync signals (active low for 640x480)
        assign o_hs = ~((h_count >= HS_STA) & (h_count < HS_END));
        assign o_vs = ~((v_count >= VS_STA) & (v_count < VS_END));
    
        // keep x and y bound within the active pixels
        assign o_x = (h_count < HA_STA) ? 0 : (h_count - HA_STA);
        assign o_y = (v_count >= VA_END) ? (VA_END - 1) : (v_count);
    
        // blanking: high within the blanking period
        assign o_blanking = ((h_count < HA_STA) | (v_count > VA_END - 1));
    
        // active: high during active pixel drawing
        assign o_active = ~((h_count < HA_STA) | (v_count > VA_END - 1)); 
    
        // screenend: high for one tick at the end of the screen
        assign o_screenend = ((v_count == SCREEN - 1) & (h_count == LINE));
    
        // animate: high for one tick at the end of the final active pixel line
        assign o_animate = ((v_count == VA_END - 1) & (h_count == LINE));
    
        always @ (posedge i_clk)
        begin
            if (i_pix_stb)  // once per pixel
            begin
                if (h_count == LINE)  // end of line
                begin
                    h_count <= 0;
                    v_count <= v_count + 1;
                end
                else 
                    h_count <= h_count + 1;
    
                if (v_count == SCREEN)  // end of screen
                    begin
                    v_count <= 0;
                    end
            end
        end
    endmodule

    
 
            module SPIComPart(
                input wire i_clk,                   // base clock
                input wire [0:n-1] i_controlReg,    // control reg
                input wire  i_serial,               // serialIn
        
                output reg [0:n-1] o_dataReg = 0,       //databits to write to
                output reg [0:n-1] o_statReg = 0,       //status reg to write to
        
                output reg o_enable = 1,                 // start comms on slave
                output reg o_clock = 0           // clock out for clock
                );
        
                parameter n=16;
        
                //for now lets just count to 16.
                reg [0:7]internalcounter = 0;
                reg  startcoms = 0;
                reg  startcomsRisingEdge = 0;
                reg hold = 0;
               
                //when the clock goes high and start is high
                //then generate n clock pulses.
                //then drive start low.
                //and shift in data after each pulse.
                
                always @(posedge i_clk)
                begin
                
                 startcomsRisingEdge = i_controlReg[15] & !startcoms;              
                 startcoms = i_controlReg[15];
               
                if((startcomsRisingEdge))begin
                   hold = 1;
                   o_statReg[15] = 0;
                end
               
                        if(internalcounter > 31)
                        begin
                            internalcounter = 0;
                            hold = 0;
                            o_enable = 1;
                            o_statReg[15] = 1;
                            o_clock = 0;
                        end
                        
                          
                          
                        //if we have not yet reset the start flag
                        //then count on the clock
                        if(hold == 1)begin
                            internalcounter = internalcounter + 1;
                             o_enable = 0;
                             o_clock = internalcounter[7];
                            //shift in data from the serial port
                            if(o_clock == 0) begin
                            o_dataReg <= {i_serial,o_dataReg[0:n-2]};
                            end
                        end
                       
                
                end
        
                endmodule
    
        (* DONT_TOUCH = "yes" *)
        module top(input CLK,
        
            output reg [0:3] LED,
            output wire VGA_HS_O,       // horizontal sync output
            output wire VGA_VS_O,       // vertical sync output
            output wire [3:0] VGA_R,    // 4-bit VGA red output
            output wire [3:0] VGA_G,    // 4-bit VGA green output
            output wire [3:0] VGA_B);     // 4-bit VGA blue output);
               
            reg HIGH = 1;
            reg LOW = 0;
            reg SUBMODE = 0;
            reg UNCONNECTED = 0;

            reg [0:0]clock;
            reg [0:0]ClockFaster;
            reg pix_stb;

        
        
        wire [0:1-1] COMenableOnb8815170_2006_4676_8889_dd9503c40891;
wire [0:1-1] invertONfb9a03b1_72b9_4c28_a181_ae5de7adb5bc;
wire [0:1-1] signalBankOutputOn0e868c2c_dcbe_4a40_9897_bbecc468f0d7;
wire [0:1-1] invertOn40ddbfd1_4534_4b61_b360_2cfd3b8e805c;
wire [0:1-1] eepromChipEnableeaa5b5f7_34a5_4477_beea_2439f1fa476b;
wire [0:1-1] eepromOutEnable2282d09c_eb83_4e83_ada0_5821741856ca;
wire [0:1-1] eepromWriteDisabled17e5ddbc_79dd_4849_9f41_3ae9ca6d311b;
wire [0:1-1] load_disabled2616b9b8_0c14_4281_9fcf_690c936b04d0;
wire [0:1-1] count_enable_microcode_counter2e6af66c_db76_4b9f_8b18_5c8668428693;
wire [0:1-1] invert_clock_signal_enable5c175bbd_e52a_4412_8fb8_15efe78c33c3;
wire [0:1-1] clearPC5114e452_97e5_444a_ba45_81e4aa44006b;
wire [0:1-1] ram_chipEnableaf5f41bd_c88a_4498_b410_bea8533865cc;



wire [0:16-1] comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399;
wire [0:16-1] allInputsFor4fe810f3_0f09_421d_9739_67b81c0658a3= {spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[0],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[1],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[2],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[3],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[4],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[5],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[6],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[7],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[8],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[9],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[10],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[11],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[12],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[13],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[14],spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1[15]};
wire [0:16-1] comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a;
wire [0:16-1] allInputsFor8ee5f49e_708f_4161_93c6_381995410536= {spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[0],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[1],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[2],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[3],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[4],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[5],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[6],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[7],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[8],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[9],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[10],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[11],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[12],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[13],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[14],spi_testd35d8ada_d518_4b78_aabf_069a51fa7142[15]};

wire [0:1-1] invert_clock_signal490a71cd_cd4b_4cf6_bca7_0e517dab1a58;
wire [0:3-1] microcode_step_counterbe90e1c4_1d1a_42b9_adfe_e1b5f1432d92;
wire [0:1-1] decodeInverterbf103637_c9dc_45ad_9b44_dbd9d0c7a927;

wire decoder2dffa94d7_1eac_4e46_aa4c_7cd063c6dbba;
wire decoder2cb36b5cd_583c_4bb1_8b1a_cd55bbd5ce88;
wire decoder27f1ad2d4_1cfe_4a00_8803_1ee432426c85;
wire decoder2c74738da_10a3_475e_ac06_f862b965811a;
wire decoder1a5585ee7_b241_4074_aef1_3a6bf00c1f7c;
wire decoder12b930e6d_f5e7_4965_a8da_b6d283ee43a3;
wire decoder152af4203_17a1_4855_8a23_7efe4d4a5fca;
wire decoder15833d081_74a0_4997_ab19_6069613b7dc5;
wire [0:16-1] Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51;
wire [0:16-1] pc_bufferbdd9a247_20dc_4c2a_951c_ae35e5efacd6;
wire [0:16-1] allInputsFor288c1155_0e53_4a7b_816b_136971330ddb= {Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[0],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[1],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[2],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[3],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[4],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[5],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[6],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[7],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[8],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[9],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[10],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[11],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[12],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[13],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[14],Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51[15]};
wire [0:16-1] main_bus05bccea1_2e5a_4373_b8ae_af07b435c213;
wire [0:112-1] allInputsFor23135c7b_e7e3_48b3_9872_abcb147d0fe3= {A_reg_buffer2a6ded4b_0c8c_41ac_9a8a_826ad5f821e8,B_reg_buffer5c3539ed_4dc3_4302_a017_d3cd808544fa,adder_buffer9f632387_1de3_4f4f_9aba_86de14719636,ram_output_bufferf74566f7_6795_4f0f_ba99_b282f58c9135,pc_bufferbdd9a247_20dc_4c2a_951c_ae35e5efacd6,comDataRegBuffereaf9da2b_468c_415d_bf5b_c32e22f5850f,comStatusRegBuffer1ce0c346_27fa_4f2c_ab9f_13a0b25ed931};
wire [0:7-1] allSelectsFor23135c7b_e7e3_48b3_9872_abcb147d0fe3= {microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[8],microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[15],microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[9],microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[1],microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[4],microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[25],microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[23]};
wire [0:16-1] instruction_registerb51bc7a8_066c_4bba_84b5_36ab695be5f1;
wire [0:16-1] allInputsFor4c13b2a3_f1fa_4555_9f53_f43b2b6b2b49= {main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[0],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[1],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[2],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[3],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[4],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[5],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[6],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[7],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[8],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[9],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[10],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[11],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[12],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[13],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[14],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[15]};
wire [0:32-1] microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403;
wire [0:8-1] allAddressInputsFor377ed6c7_2bbb_44d7_adf2_94bca9bfe598= {instruction_registerb51bc7a8_066c_4bba_84b5_36ab695be5f1[11],instruction_registerb51bc7a8_066c_4bba_84b5_36ab695be5f1[12],instruction_registerb51bc7a8_066c_4bba_84b5_36ab695be5f1[13],instruction_registerb51bc7a8_066c_4bba_84b5_36ab695be5f1[14],instruction_registerb51bc7a8_066c_4bba_84b5_36ab695be5f1[15],microcode_step_counterbe90e1c4_1d1a_42b9_adfe_e1b5f1432d92[0],microcode_step_counterbe90e1c4_1d1a_42b9_adfe_e1b5f1432d92[1],microcode_step_counterbe90e1c4_1d1a_42b9_adfe_e1b5f1432d92[2]};
wire [0:32-1] allDataInputsFor377ed6c7_2bbb_44d7_adf2_94bca9bfe598= {UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED};
wire [0:32-1] microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3;
wire [0:32-1] allInputsFor352045fe_8d5f_4b0b_939a_2db49f35f670= {microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[0],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[1],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[2],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[3],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[4],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[5],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[6],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[7],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[8],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[9],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[10],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[11],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[12],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[13],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[14],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[15],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[16],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[17],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[18],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[19],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[20],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[21],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[22],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[23],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[24],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[25],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[26],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[27],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[28],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[29],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[30],microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403[31]};
wire [0:16-1] comDataRegBuffereaf9da2b_468c_415d_bf5b_c32e22f5850f;
wire [0:16-1] allInputsFor96c4cfbc_7519_4dd2_be06_8d6157f6da34= {comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[0],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[1],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[2],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[3],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[4],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[5],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[6],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[7],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[8],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[9],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[10],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[11],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[12],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[13],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[14],comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399[15]};
wire [0:16-1] comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846;
wire [0:16-1] allInputsFor9ac2b6cb_b073_4836_bb08_28e003ade317= {main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[0],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[1],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[2],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[3],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[4],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[5],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[6],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[7],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[8],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[9],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[10],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[11],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[12],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[13],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[14],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[15]};
wire [0:16-1] spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1;
wire [0:16-1] spi_testd35d8ada_d518_4b78_aabf_069a51fa7142;
wire [0:16-1] AllControlInputsFor1116cfdd_dc43_4992_9370_c3ee65fb6a77= {comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[0],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[1],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[2],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[3],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[4],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[5],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[6],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[7],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[8],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[9],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[10],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[11],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[12],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[13],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[14],comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846[15]};
wire [0:16-1] comStatusRegBuffer1ce0c346_27fa_4f2c_ab9f_13a0b25ed931;
wire [0:16-1] allInputsForaef17602_8de9_4e6b_bf9f_687401161d0e= {comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[0],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[1],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[2],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[3],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[4],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[5],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[6],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[7],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[8],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[9],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[10],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[11],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[12],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[13],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[14],comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a[15]};
wire [0:1-1] countEnableInverterbcda0b24_bc02_4463_b0b5_31079c09fe66;
wire [0:1-1] ramOutInverterbf8e0003_0993_4c90_b145_0581ab05243f;
wire [0:1-1] ramInInverterae4defc3_5c1b_4381_a02c_959011627c64;
wire [0:16-1] memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769;
wire [0:16-1] allInputsFor9db1a54f_4613_4f62_9c3f_90fe748313a2= {main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[0],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[1],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[2],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[3],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[4],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[5],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[6],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[7],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[8],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[9],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[10],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[11],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[12],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[13],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[14],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[15]};
wire [0:16-1] main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0;
wire [0:16-1] main_ram51496718_f943_4b7d_959d_697af4123ea0;
wire [0:16-1] allAddress1InputsForf4735db6_1654_41d1_b0e2_49a8d53e9e0c= {memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[0],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[1],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[2],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[3],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[4],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[5],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[6],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[7],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[8],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[9],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[10],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[11],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[12],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[13],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[14],memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769[15]};
wire [0:16-1] allAddress2InputsForf4735db6_1654_41d1_b0e2_49a8d53e9e0c= {UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED,UNCONNECTED};
wire [0:16-1] allDataInputsForf4735db6_1654_41d1_b0e2_49a8d53e9e0c= {main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[0],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[1],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[2],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[3],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[4],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[5],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[6],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[7],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[8],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[9],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[10],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[11],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[12],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[13],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[14],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[15]};
wire [0:16-1] ram_output_bufferf74566f7_6795_4f0f_ba99_b282f58c9135;
wire [0:16-1] allInputsForacf44f5a_d932_42a6_90ef_9562e3367d67= {main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[0],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[1],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[2],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[3],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[4],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[5],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[6],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[7],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[8],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[9],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[10],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[11],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[12],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[13],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[14],main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0[15]};
wire [0:16-1] OUT_register0a921192_38b9_4e39_bae2_45d167b11e32;
wire [0:16-1] allInputsForf7fdd6f0_f0d8_4d14_a4cf_5526eb985345= {main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[0],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[1],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[2],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[3],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[4],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[5],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[6],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[7],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[8],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[9],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[10],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[11],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[12],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[13],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[14],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[15]};
wire [0:16-1] B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75;
wire [0:16-1] allInputsForda531938_6e38_432c_a231_c74128d30f73= {main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[0],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[1],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[2],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[3],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[4],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[5],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[6],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[7],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[8],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[9],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[10],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[11],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[12],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[13],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[14],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[15]};
wire [0:16-1] B_reg_buffer5c3539ed_4dc3_4302_a017_d3cd808544fa;
wire [0:16-1] allInputsFor2962e3af_f3a5_4ea4_ac69_57d70dee3f10= {B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[0],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[1],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[2],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[3],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[4],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[5],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[6],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[7],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[8],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[9],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[10],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[11],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[12],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[13],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[14],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[15]};
wire [0:16-1] A_register6223aab8_7f66_47f2_a123_7f2ae77845fb;
wire [0:16-1] allInputsForabb0715c_0766_4c2f_adc5_9bc4ca44c0a4= {main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[0],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[1],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[2],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[3],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[4],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[5],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[6],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[7],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[8],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[9],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[10],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[11],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[12],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[13],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[14],main_bus05bccea1_2e5a_4373_b8ae_af07b435c213[15]};
wire [0:0] A_B_Comparatorf527874e_8d6d_4e6a_bd38_dbb14816420f;
wire [0:16-1] allADataInputsForefa861f5_09e1_4d37_907a_dcb4dc61ef93= {A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[0],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[1],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[2],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[3],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[4],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[5],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[6],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[7],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[8],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[9],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[10],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[11],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[12],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[13],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[14],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[15]};
wire [0:16-1] allBDataInputsForefa861f5_09e1_4d37_907a_dcb4dc61ef93= {B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[0],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[1],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[2],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[3],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[4],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[5],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[6],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[7],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[8],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[9],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[10],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[11],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[12],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[13],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[14],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[15]};
wire [0:0] A_B_Comparator5a36ff33_01cb_42fd_8f9d_97baeca170c7;
wire [0:1-1] invertALESSB6b411dea_507a_4a2f_9419_e48a058d6c06;
wire [0:1-1] invertAEQUALBadc5f090_3f95_4944_984c_584c5a7d801a;
wire [0:1-1] AGREATERB527b6171_f9d3_473c_9665_2998e51a06b0;
wire [0:4-1] flags_register9528d398_6b41_42cb_bc5e_d336f7518a5a;
wire [0:4-1] allInputsFor03ac11d4_51d6_4117_8e82_563361aa6833= {AGREATERB527b6171_f9d3_473c_9665_2998e51a06b0[0],A_B_Comparatorf527874e_8d6d_4e6a_bd38_dbb14816420f[0],A_B_Comparator5a36ff33_01cb_42fd_8f9d_97baeca170c7[0],UNCONNECTED};
wire [0:1-1] ANDALESSB1145069e_cbf0_48ce_a834_411690843e93;
wire [0:1-1] ANDAEQUALB81959d8d_3dd3_4d49_8145_d4af3247a6ec;
wire [0:1-1] ANDAGBfc3af5c9_8e7a_4f55_aed3_2f524fe6218e;
wire [0:1-1] OR19dd70676_8e0f_4823_8883_27c1e3905d75;
wire [0:1-1] OR2510d2d59_692f_4db2_8677_a9c45d30a121;
wire [0:1-1] loadInverter8d61ee3d_3bc6_4620_93ee_2f62dac268fd;
wire [0:16-1] A_reg_buffer2a6ded4b_0c8c_41ac_9a8a_826ad5f821e8;
wire [0:16-1] allInputsFor47b1d74a_b797_4099_8624_6bdb81a341a3= {A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[0],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[1],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[2],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[3],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[4],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[5],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[6],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[7],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[8],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[9],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[10],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[11],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[12],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[13],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[14],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[15]};
wire [0:16-1] addere636712d_2196_41d5_adcb_08a035cbf680;
wire adder6f1b054c_1936_4f88_befe_0185fbeb5a3d;
wire [0:16-1] allADataInputsFor4baf0000_e635_4404_bbab_eb6935f964b0= {A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[0],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[1],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[2],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[3],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[4],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[5],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[6],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[7],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[8],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[9],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[10],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[11],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[12],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[13],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[14],A_register6223aab8_7f66_47f2_a123_7f2ae77845fb[15]};
wire [0:16-1] allBDataInputsFor4baf0000_e635_4404_bbab_eb6935f964b0= {B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[0],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[1],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[2],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[3],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[4],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[5],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[6],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[7],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[8],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[9],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[10],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[11],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[12],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[13],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[14],B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75[15]};
wire [0:16-1] adder_buffer9f632387_1de3_4f4f_9aba_86de14719636;
wire [0:16-1] allInputsForb18bf527_23ad_4fe7_aeda_5716674e7b50= {addere636712d_2196_41d5_adcb_08a035cbf680[0],addere636712d_2196_41d5_adcb_08a035cbf680[1],addere636712d_2196_41d5_adcb_08a035cbf680[2],addere636712d_2196_41d5_adcb_08a035cbf680[3],addere636712d_2196_41d5_adcb_08a035cbf680[4],addere636712d_2196_41d5_adcb_08a035cbf680[5],addere636712d_2196_41d5_adcb_08a035cbf680[6],addere636712d_2196_41d5_adcb_08a035cbf680[7],addere636712d_2196_41d5_adcb_08a035cbf680[8],addere636712d_2196_41d5_adcb_08a035cbf680[9],addere636712d_2196_41d5_adcb_08a035cbf680[10],addere636712d_2196_41d5_adcb_08a035cbf680[11],addere636712d_2196_41d5_adcb_08a035cbf680[12],addere636712d_2196_41d5_adcb_08a035cbf680[13],addere636712d_2196_41d5_adcb_08a035cbf680[14],addere636712d_2196_41d5_adcb_08a035cbf680[15]};
wire [0:10-1] sigGen6940e9e2_70d6_48e8_9b4d_c9204cb977ea;
wire [0:9-1] sigGen75f81aa9_5907_43b6_8969_c5961173d4ae;
wire sigGenb2eac937_1345_4d36_b974_ee3ed1417d13;
wire sigGen39217132_6b2d_4501_983a_e8de5a573245;


voltageRail COMenableOncca91ad9_5acd_4150_81b9_aafdf31bfc18 ( 
                .data(HIGH), 
                .Q(COMenableOnb8815170_2006_4676_8889_dd9503c40891) );


voltageRail invertONc510ebbc_9bcc_4208_95a4_a6ae98d20263 ( 
                .data(HIGH), 
                .Q(invertONfb9a03b1_72b9_4c28_a181_ae5de7adb5bc) );


voltageRail signalBankOutputOn91c920c6_94d3_48d3_bfa3_8202296ba872 ( 
                .data(HIGH), 
                .Q(signalBankOutputOn0e868c2c_dcbe_4a40_9897_bbecc468f0d7) );


voltageRail invertOn2761c4dd_dbe3_42bf_84e2_4883dbc2daf1 ( 
                .data(HIGH), 
                .Q(invertOn40ddbfd1_4534_4b61_b360_2cfd3b8e805c) );


voltageRail eepromChipEnable21b445e6_4361_4308_93d5_e1a17790befa ( 
                .data(LOW), 
                .Q(eepromChipEnableeaa5b5f7_34a5_4477_beea_2439f1fa476b) );


voltageRail eepromOutEnablec15c036a_7efe_4d55_8ce9_a0bee1fc58dd ( 
                .data(LOW), 
                .Q(eepromOutEnable2282d09c_eb83_4e83_ada0_5821741856ca) );


voltageRail eepromWriteDisabled96f6d77b_dcc7_45a7_ba31_76b349df41c1 ( 
                .data(HIGH), 
                .Q(eepromWriteDisabled17e5ddbc_79dd_4849_9f41_3ae9ca6d311b) );


voltageRail load_disabled40c9c676_ef55_4778_a2ac_ebc89a96e69e ( 
                .data(HIGH), 
                .Q(load_disabled2616b9b8_0c14_4281_9fcf_690c936b04d0) );


voltageRail count_enable_microcode_counter068a146b_b76d_40a7_993b_85514641eed8 ( 
                .data(LOW), 
                .Q(count_enable_microcode_counter2e6af66c_db76_4b9f_8b18_5c8668428693) );


voltageRail invert_clock_signal_enable64d1b9b5_e352_4422_8137_cb5d77deb785 ( 
                .data(HIGH), 
                .Q(invert_clock_signal_enable5c175bbd_e52a_4412_8fb8_15efe78c33c3) );


voltageRail clearPC27d7e31e_72f3_4f0b_9698_fbe4953ae3a9 ( 
                .data(HIGH), 
                .Q(clearPC5114e452_97e5_444a_ba45_81e4aa44006b) );


voltageRail ram_chipEnable8c5971a1_a28d_432d_ac1c_1ab9a8f20328 ( 
                .data(LOW), 
                .Q(ram_chipEnableaf5f41bd_c88a_4498_b410_bea8533865cc) );









nRegister #(.n(16)) comDataReg4fe810f3_0f09_421d_9739_67b81c0658a3 ( 
                .data(allInputsFor4fe810f3_0f09_421d_9739_67b81c0658a3), 
                .clock(clock[0]), 
                .enable(COMenableOnb8815170_2006_4676_8889_dd9503c40891[0]),
                 .Q(comDataReg668a2e5c_11a3_40d0_ba39_8494b2de8399) );



nRegister #(.n(16)) comStatusReg8ee5f49e_708f_4161_93c6_381995410536 ( 
                .data(allInputsFor8ee5f49e_708f_4161_93c6_381995410536), 
                .clock(clock[0]), 
                .enable(COMenableOnb8815170_2006_4676_8889_dd9503c40891[0]),
                 .Q(comStatusReg864954c3_d7f8_4b02_bdbd_e7539bf6485a) );




inverter invert_clock_signal16fd0b69_0cd5_43bb_8b20_6ed333f64bb7 ( 
                .data(clock[0]), 
                .Q(invert_clock_signal490a71cd_cd4b_4cf6_bca7_0e517dab1a58), 
                .outputEnable(invert_clock_signal_enable5c175bbd_e52a_4412_8fb8_15efe78c33c3[0]) );


binaryCounter #(.n(3)) microcode_step_counter831a427f_af15_4edd_ba7d_7202f19a9930 (
                .D(UNCONNECTED),
                .clr_(invert_clock_signal_enable5c175bbd_e52a_4412_8fb8_15efe78c33c3[0]),
                .load_(load_disabled2616b9b8_0c14_4281_9fcf_690c936b04d0[0]),
                .clock(invert_clock_signal490a71cd_cd4b_4cf6_bca7_0e517dab1a58[0]),
                .enable1_(count_enable_microcode_counter2e6af66c_db76_4b9f_8b18_5c8668428693[0]),
                .enable2_(count_enable_microcode_counter2e6af66c_db76_4b9f_8b18_5c8668428693[0]),
                .Q(microcode_step_counterbe90e1c4_1d1a_42b9_adfe_e1b5f1432d92));


inverter decodeInverter1b6f91a8_1138_4a08_bb16_4bb3f41ddb06 ( 
                .data(microcode_step_counterbe90e1c4_1d1a_42b9_adfe_e1b5f1432d92[2]), 
                .Q(decodeInverterbf103637_c9dc_45ad_9b44_dbd9d0c7a927), 
                .outputEnable(invert_clock_signal_enable5c175bbd_e52a_4412_8fb8_15efe78c33c3[0]) );







twoLineToFourLineDecoder decoder2bccc0133_ef78_4501_a95c_141d08d853c2 (
                 microcode_step_counterbe90e1c4_1d1a_42b9_adfe_e1b5f1432d92[0],
                  microcode_step_counterbe90e1c4_1d1a_42b9_adfe_e1b5f1432d92[1],
                   microcode_step_counterbe90e1c4_1d1a_42b9_adfe_e1b5f1432d92[2],
                    decoder2dffa94d7_1eac_4e46_aa4c_7cd063c6dbba,
                    decoder2cb36b5cd_583c_4bb1_8b1a_cd55bbd5ce88,
                    decoder27f1ad2d4_1cfe_4a00_8803_1ee432426c85,
                    decoder2c74738da_10a3_475e_ac06_f862b965811a);





twoLineToFourLineDecoder decoder10055d838_564a_47fc_9f8f_6e928bcaf952 (
                 microcode_step_counterbe90e1c4_1d1a_42b9_adfe_e1b5f1432d92[0],
                  microcode_step_counterbe90e1c4_1d1a_42b9_adfe_e1b5f1432d92[1],
                   decodeInverterbf103637_c9dc_45ad_9b44_dbd9d0c7a927[0],
                    decoder1a5585ee7_b241_4074_aef1_3a6bf00c1f7c,
                    decoder12b930e6d_f5e7_4965_a8da_b6d283ee43a3,
                    decoder152af4203_17a1_4855_8a23_7efe4d4a5fca,
                    decoder15833d081_74a0_4997_ab19_6069613b7dc5);


binaryCounter #(.n(16)) Program_Counter4d223eec_9b23_49a8_9ef2_37eaa324ee3c (
                .D(main_bus05bccea1_2e5a_4373_b8ae_af07b435c213),
                .clr_(clearPC5114e452_97e5_444a_ba45_81e4aa44006b[0]),
                .load_(loadInverter8d61ee3d_3bc6_4620_93ee_2f62dac268fd[0]),
                .clock(clock[0]),
                .enable1_(countEnableInverterbcda0b24_bc02_4463_b0b5_31079c09fe66[0]),
                .enable2_(countEnableInverterbcda0b24_bc02_4463_b0b5_31079c09fe66[0]),
                .Q(Program_Counteraac2a9e1_3163_45c1_acee_c869852bea51));



nBuffer  #(.n(16)) pc_buffer288c1155_0e53_4a7b_816b_136971330ddb (
                  .data(allInputsFor288c1155_0e53_4a7b_816b_136971330ddb),
                  .Q(pc_bufferbdd9a247_20dc_4c2a_951c_ae35e5efacd6), 
                  .outputEnable(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[4]) );




bus_mux #(.bus_count(7),.mux_width(16)) main_bus23135c7b_e7e3_48b3_9872_abcb147d0fe3 (
                .selects(allSelectsFor23135c7b_e7e3_48b3_9872_abcb147d0fe3),
                .data_in(allInputsFor23135c7b_e7e3_48b3_9872_abcb147d0fe3),
                .data_out(main_bus05bccea1_2e5a_4373_b8ae_af07b435c213));



nRegister #(.n(16)) instruction_register4c13b2a3_f1fa_4555_9f53_f43b2b6b2b49 ( 
                .data(allInputsFor4c13b2a3_f1fa_4555_9f53_f43b2b6b2b49), 
                .clock(clock[0]), 
                .enable(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[2]),
                 .Q(instruction_registerb51bc7a8_066c_4bba_84b5_36ab695be5f1) );




staticRamDiscretePorts #(.ROMFILE(ROMFILE),.DATA_WIDTH(32),.ADDR_WIDTH(8)) microcode_rom377ed6c7_2bbb_44d7_adf2_94bca9bfe598 (
                 .address(allAddressInputsFor377ed6c7_2bbb_44d7_adf2_94bca9bfe598),
                  .data(allDataInputsFor377ed6c7_2bbb_44d7_adf2_94bca9bfe598), 
                  .cs_(eepromChipEnableeaa5b5f7_34a5_4477_beea_2439f1fa476b[0]),
                   .we_(eepromWriteDisabled17e5ddbc_79dd_4849_9f41_3ae9ca6d311b[0]),
                   .oe_(eepromOutEnable2282d09c_eb83_4e83_ada0_5821741856ca[0]),
                    .clock(ClockFaster[0]),
                   .Q(microcode_romd0e8bea7_1734_46bb_a1dd_a1abd6c4f403));



nBuffer  #(.n(32)) microCode_SIGNAL_bank352045fe_8d5f_4b0b_939a_2db49f35f670 (
                  .data(allInputsFor352045fe_8d5f_4b0b_939a_2db49f35f670),
                  .Q(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3), 
                  .outputEnable(signalBankOutputOn0e868c2c_dcbe_4a40_9897_bbecc468f0d7[0]) );



nBuffer  #(.n(16)) comDataRegBuffer96c4cfbc_7519_4dd2_be06_8d6157f6da34 (
                  .data(allInputsFor96c4cfbc_7519_4dd2_be06_8d6157f6da34),
                  .Q(comDataRegBuffereaf9da2b_468c_415d_bf5b_c32e22f5850f), 
                  .outputEnable(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[25]) );



nRegister #(.n(16)) comControlReg9ac2b6cb_b073_4836_bb08_28e003ade317 ( 
                .data(allInputsFor9ac2b6cb_b073_4836_bb08_28e003ade317), 
                .clock(clock[0]), 
                .enable(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[24]),
                 .Q(comControlRegf82f3ac4_a5ca_4a3e_aa94_21265197e846) );




SPIComPart #(.n(16)) spi_test1116cfdd_dc43_4992_9370_c3ee65fb6a77 (
                .i_controlReg(AllControlInputsFor1116cfdd_dc43_4992_9370_c3ee65fb6a77),
                .o_dataReg(spi_testf3861d97_ad54_479b_bf53_78aecb70a7d1),
                .o_statReg(spi_testd35d8ada_d518_4b78_aabf_069a51fa7142),
                .i_serial(SERIALIN),
                .o_enable(ENABLEOUT),
                .o_clock(CLOCKOUT),
               .i_clk(clock[0]));



nBuffer  #(.n(16)) comStatusRegBufferaef17602_8de9_4e6b_bf9f_687401161d0e (
                  .data(allInputsForaef17602_8de9_4e6b_bf9f_687401161d0e),
                  .Q(comStatusRegBuffer1ce0c346_27fa_4f2c_ab9f_13a0b25ed931), 
                  .outputEnable(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[23]) );


inverter countEnableInverter46301926_d97a_4b20_98ee_40d1b2ca775d ( 
                .data(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[6]), 
                .Q(countEnableInverterbcda0b24_bc02_4463_b0b5_31079c09fe66), 
                .outputEnable(invertOn40ddbfd1_4534_4b61_b360_2cfd3b8e805c[0]) );


inverter ramOutInverterae9a9684_3adb_4e0a_bb92_f18b076fdbe8 ( 
                .data(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[1]), 
                .Q(ramOutInverterbf8e0003_0993_4c90_b145_0581ab05243f), 
                .outputEnable(invertOn40ddbfd1_4534_4b61_b360_2cfd3b8e805c[0]) );


inverter ramInInverterc1cee5c0_c896_4531_967b_936ca570099d ( 
                .data(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[0]), 
                .Q(ramInInverterae4defc3_5c1b_4381_a02c_959011627c64), 
                .outputEnable(invertOn40ddbfd1_4534_4b61_b360_2cfd3b8e805c[0]) );



nRegister #(.n(16)) memory_address_register9db1a54f_4613_4f62_9c3f_90fe748313a2 ( 
                .data(allInputsFor9db1a54f_4613_4f62_9c3f_90fe748313a2), 
                .clock(clock[0]), 
                .enable(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[18]),
                 .Q(memory_address_registerec6148bb_3d72_428f_8c62_b48e0e8bc769) );






dualPortStaticRam #(.ROMFILE(RAMFILE),.DATA_WIDTH(16),.ADDR_WIDTH(16)) main_ramf4735db6_1654_41d1_b0e2_49a8d53e9e0c (
                .address_1(allAddress1InputsForf4735db6_1654_41d1_b0e2_49a8d53e9e0c),
                .address_2(allAddress2InputsForf4735db6_1654_41d1_b0e2_49a8d53e9e0c),
                 .data(allDataInputsForf4735db6_1654_41d1_b0e2_49a8d53e9e0c), 
                 .cs_(ram_chipEnableaf5f41bd_c88a_4498_b410_bea8533865cc[0]),
                  .we_(ramInInverterae4defc3_5c1b_4381_a02c_959011627c64[0]),
                  .oe_(ramOutInverterbf8e0003_0993_4c90_b145_0581ab05243f[0]),
                  .clock(ClockFaster[0]),
                  .clock2(ClockFaster[0]),
                  .Q_1(main_ramc11f7ea3_e081_4b0f_9b9a_67dcaa2222e0),
                  .Q_2(main_ram51496718_f943_4b7d_959d_697af4123ea0));



nBuffer  #(.n(16)) ram_output_bufferacf44f5a_d932_42a6_90ef_9562e3367d67 (
                  .data(allInputsForacf44f5a_d932_42a6_90ef_9562e3367d67),
                  .Q(ram_output_bufferf74566f7_6795_4f0f_ba99_b282f58c9135), 
                  .outputEnable(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[1]) );



nRegister #(.n(16)) OUT_registerf7fdd6f0_f0d8_4d14_a4cf_5526eb985345 ( 
                .data(allInputsForf7fdd6f0_f0d8_4d14_a4cf_5526eb985345), 
                .clock(clock[0]), 
                .enable(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[16]),
                 .Q(OUT_register0a921192_38b9_4e39_bae2_45d167b11e32) );



nRegister #(.n(16)) B_registerda531938_6e38_432c_a231_c74128d30f73 ( 
                .data(allInputsForda531938_6e38_432c_a231_c74128d30f73), 
                .clock(clock[0]), 
                .enable(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[14]),
                 .Q(B_register29b2e8d1_e05e_41e4_bca5_ca8aa8b78e75) );



nBuffer  #(.n(16)) B_reg_buffer2962e3af_f3a5_4ea4_ac69_57d70dee3f10 (
                  .data(allInputsFor2962e3af_f3a5_4ea4_ac69_57d70dee3f10),
                  .Q(B_reg_buffer5c3539ed_4dc3_4302_a017_d3cd808544fa), 
                  .outputEnable(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[15]) );



nRegister #(.n(16)) A_registerabb0715c_0766_4c2f_adc5_9bc4ca44c0a4 ( 
                .data(allInputsForabb0715c_0766_4c2f_adc5_9bc4ca44c0a4), 
                .clock(clock[0]), 
                .enable(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[7]),
                 .Q(A_register6223aab8_7f66_47f2_a123_7f2ae77845fb) );





nbitComparator #(.n(16)) A_B_Comparatorefa861f5_09e1_4d37_907a_dcb4dc61ef93 (
                .a(allADataInputsForefa861f5_09e1_4d37_907a_dcb4dc61ef93),
                .b(allBDataInputsForefa861f5_09e1_4d37_907a_dcb4dc61ef93),
                .equal(A_B_Comparatorf527874e_8d6d_4e6a_bd38_dbb14816420f),
                .lower(A_B_Comparator5a36ff33_01cb_42fd_8f9d_97baeca170c7));


inverter invertALESSB09693bfa_89e7_47b9_92ac_053baec41b80 ( 
                .data(A_B_Comparator5a36ff33_01cb_42fd_8f9d_97baeca170c7[0]), 
                .Q(invertALESSB6b411dea_507a_4a2f_9419_e48a058d6c06), 
                .outputEnable(invertONfb9a03b1_72b9_4c28_a181_ae5de7adb5bc[0]) );


inverter invertAEQUALB015690f9_36ac_451d_9033_e9046c66feba ( 
                .data(A_B_Comparatorf527874e_8d6d_4e6a_bd38_dbb14816420f[0]), 
                .Q(invertAEQUALBadc5f090_3f95_4944_984c_584c5a7d801a), 
                .outputEnable(invertONfb9a03b1_72b9_4c28_a181_ae5de7adb5bc[0]) );


ANDGATE AGREATERB025d444e_5e59_4b9c_9d10_89e0f9a662d9 ( 
                invertAEQUALBadc5f090_3f95_4944_984c_584c5a7d801a[0], 
                invertALESSB6b411dea_507a_4a2f_9419_e48a058d6c06[0], 
                AGREATERB527b6171_f9d3_473c_9665_2998e51a06b0 );



nRegister #(.n(4)) flags_register03ac11d4_51d6_4117_8e82_563361aa6833 ( 
                .data(allInputsFor03ac11d4_51d6_4117_8e82_563361aa6833), 
                .clock(clock[0]), 
                .enable(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[22]),
                 .Q(flags_register9528d398_6b41_42cb_bc5e_d336f7518a5a) );


ANDGATE ANDALESSB562826c6_a1aa_41ec_8817_a1a738ddfe0f ( 
                flags_register9528d398_6b41_42cb_bc5e_d336f7518a5a[2], 
                microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[19], 
                ANDALESSB1145069e_cbf0_48ce_a834_411690843e93 );


ANDGATE ANDAEQUALBa2a496fd_a4ee_4cb6_85dc_1964dd3432c4 ( 
                flags_register9528d398_6b41_42cb_bc5e_d336f7518a5a[1], 
                microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[20], 
                ANDAEQUALB81959d8d_3dd3_4d49_8145_d4af3247a6ec );


ANDGATE ANDAGB779a42f2_19a3_4c26_afa1_593157720297 ( 
                flags_register9528d398_6b41_42cb_bc5e_d336f7518a5a[0], 
                microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[21], 
                ANDAGBfc3af5c9_8e7a_4f55_aed3_2f524fe6218e );


ORGATE OR1ee9f4840_96ac_4ce6_827d_40d986c3e3b9 ( 
                ANDAGBfc3af5c9_8e7a_4f55_aed3_2f524fe6218e[0], 
                ANDAEQUALB81959d8d_3dd3_4d49_8145_d4af3247a6ec[0],
                OR19dd70676_8e0f_4823_8883_27c1e3905d75);


ORGATE OR2f6304984_9120_4a5c_b015_966f07fe059c ( 
                OR19dd70676_8e0f_4823_8883_27c1e3905d75[0], 
                ANDALESSB1145069e_cbf0_48ce_a834_411690843e93[0],
                OR2510d2d59_692f_4db2_8677_a9c45d30a121);


inverter loadInverter83f9d9e0_c81b_407c_bd7b_2b4b80a1a0cf ( 
                .data(OR2510d2d59_692f_4db2_8677_a9c45d30a121[0]), 
                .Q(loadInverter8d61ee3d_3bc6_4620_93ee_2f62dac268fd), 
                .outputEnable(invertONfb9a03b1_72b9_4c28_a181_ae5de7adb5bc[0]) );



nBuffer  #(.n(16)) A_reg_buffer47b1d74a_b797_4099_8624_6bdb81a341a3 (
                  .data(allInputsFor47b1d74a_b797_4099_8624_6bdb81a341a3),
                  .Q(A_reg_buffer2a6ded4b_0c8c_41ac_9a8a_826ad5f821e8), 
                  .outputEnable(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[8]) );





nbitAdder #(.n(16)) adder4baf0000_e635_4404_bbab_eb6935f964b0 (
                 .sub(SUBMODE),
                .cin(UNCONNECTED),
                .x(allADataInputsFor4baf0000_e635_4404_bbab_eb6935f964b0),
                .y(allBDataInputsFor4baf0000_e635_4404_bbab_eb6935f964b0),
                .sum(addere636712d_2196_41d5_adcb_08a035cbf680),
                .cout(adder6f1b054c_1936_4f88_befe_0185fbeb5a3d));



nBuffer  #(.n(16)) adder_bufferb18bf527_23ad_4fe7_aeda_5716674e7b50 (
                  .data(allInputsForb18bf527_23ad_4fe7_aeda_5716674e7b50),
                  .Q(adder_buffer9f632387_1de3_4f4f_9aba_86de14719636), 
                  .outputEnable(microCode_SIGNAL_bank1ab29ec4_7e7f_426b_9e26_f13b015cc9e3[9]) );





vgaSignalGenerator sigGen65153722_46f6_4bea_afb6_f9c0f9ba3132 (
                .i_clk(clock[0]),
                .i_pix_stb(25MHZCLOCK),
                .o_hs(sigGenb2eac937_1345_4d36_b974_ee3ed1417d13),
                .o_vs(sigGen39217132_6b2d_4501_983a_e8de5a573245),
                .o_x(sigGen6940e9e2_70d6_48e8_9b4d_c9204cb977ea),
                .o_y(sigGen75f81aa9_5907_43b6_8969_c5961173d4ae)
            );

        reg [32:0] counter = 32'b0;
            always @ (posedge CLK) 
            begin
                LED = REPLACE WITH OUT REG STRING;          
                counter <= counter + 1;
                if(REPLACE WITH MICROCODE OUTPUT BANK[17] == 0) begin
                clock[0] <= counter[9];
                end
                //TODO see if it works if we set strobe to counter[3 or 4];
                 //{pix_stb, counter} <= counter + 32'h40000000;  // divide by 4: (2^16)/4 = 0x4000
                 //RAM clock...
                ClockFaster[0] <= counter[5];
               
            end

        endmodule
        